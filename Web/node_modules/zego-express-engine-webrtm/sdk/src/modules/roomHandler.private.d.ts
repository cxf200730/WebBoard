import { ENUM_RUN_STATE } from '../zego.entity';
import { StateCenter } from '../stateCenter';
import { ZegoDataReport, ZegoLogger } from 'zego-express-logger';
import { LiveRoomPrivateService } from '../service.private';
import { ZegoError } from '../../code/zh/ZegoExpressEntity';
import { LiveRoomModules } from './index.private';
export declare class RoomPrivateHandler {
    private logger;
    private stateCenter;
    private dataReport;
    private service;
    private room;
    private tryLoginTimer;
    private tryLoginCount;
    private tryLoginInterval;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, dataReport: ZegoDataReport, service: LiveRoomPrivateService, room: LiveRoomModules);
    setRoomRunState(newRunState: ENUM_RUN_STATE): void;
    enterRoom(suc: Function, error: Function): void;
    leaveRoom(suc: Function, error: Function): void;
    resetRoom(suc?: Function, error?: Function): void;
    resetRoomCallBack(): void;
    loginSuccessCallBack(lastRunState: number, msg: any): void;
    roomStateHandle(state: 'DISCONNECTED' | 'CONNECTING' | 'CONNECTED', error: ZegoError, extendedData?: string): void;
}
