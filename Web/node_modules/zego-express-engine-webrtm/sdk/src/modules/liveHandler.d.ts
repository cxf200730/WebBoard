import { StateCenter } from '../stateCenter';
import { ZegoLogger, ZegoError } from '../zego.entity';
import { LiveRoomService } from '../service';
import { LiveRoomModules } from '.';
import { LiveRoomPrivateService } from '../service.private';
import { LiveRoomModules as LiveRoomPriModules } from './index.private';
export declare class LiveHandler {
    private logger;
    private stateCenter;
    private service;
    private room;
    private joinLiveCallbackMap;
    private joinLiveRequestMap;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, service: LiveRoomService | LiveRoomPrivateService, room: LiveRoomModules | LiveRoomPriModules);
    resetLiveHandler(): void;
    private getSignalCmdContent;
    requestJoinLive(destIdName: string, success: (seq: number) => void, error: (err: ZegoError, seq: number) => void, resultCallback: (result: boolean, fromUserId: string, fromUserName: string) => void): boolean;
    sendSignalCmd(cmd: number, signalMsg: string, dest_id_name: string, success: Function | undefined, error: Function | undefined): void;
    inviteJoinLive(destIdName: string, success: (seq: number) => void, error: (err: ZegoError, seq: number) => void, resultCallback: (result: boolean, fromUserId: string, fromUserName: string) => void): boolean;
    endJoinLive(destIdName: string, success: (seq: number) => void, error: (err: ZegoError, seq: number) => void): boolean;
    respondJoinLive(requestId: string, respondResult: boolean, success?: (seq: number) => void, error?: (err: ZegoError, seq: number) => void): boolean;
    handlePushSignalMsg(msg: any): void;
    private handlePushJoinLiveRequestMsg;
    onRecvJoinLiveRequest(requestId: string, from_userid: string, from_username: string, roomid: string): void;
    private handlePushJoinLiveInviteMsg;
    onRecvInviteJoinLiveRequest(requestId: string, from_userid: string, from_username: string, roomid: string): void;
    private handlePushJoinLiveResultMsg;
    private handlePushJoinLiveStopMsg;
    onRecvEndJoinLiveCommand(requestId: string, from_userid: string, from_username: string, roomid: string): void;
}
