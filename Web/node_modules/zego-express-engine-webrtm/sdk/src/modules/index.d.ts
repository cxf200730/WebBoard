import { ZegoDataReport, ZegoLogger, ENUM_RUN_STATE } from '../zego.entity';
import { LiveRoomService } from '../service';
import { HeartBeatHandler } from './heartBeatHandler';
import { LiveHandler } from './liveHandler';
import { MessageHandler } from './messageHandler';
import { RoomHandler } from './roomHandler';
import { StateCenter } from '../stateCenter';
import { UserHandler } from './userHandler';
import { RetryRoomHandler } from './retryRoomHandler';
export declare class LiveRoomModules {
    roomID: string;
    private stateCenter;
    private logger;
    private dataReport;
    service: LiveRoomService;
    roomHandler: RoomHandler;
    heartBeatHandler: HeartBeatHandler;
    messageHandler: MessageHandler;
    liveHandler: LiveHandler;
    userHandler: UserHandler;
    roomTryHandler?: RetryRoomHandler;
    runState: ENUM_RUN_STATE;
    lastRunState: ENUM_RUN_STATE;
    lastRoomState: 'DISCONNECTED' | 'CONNECTING' | 'CONNECTED';
    roomState: 'DISCONNECTED' | 'CONNECTING' | 'CONNECTED';
    roomSessionID: string;
    sessionID: string;
    isMulti: boolean;
    token: string;
    thirdToken: string;
    constructor(roomID: string, stateCenter: StateCenter, logger: ZegoLogger, dataReport: ZegoDataReport, service: LiveRoomService);
    init(): void;
    bindHeatBeatHandler(): void;
    bindRoomHandler(): void;
    bindUserHandler(): void;
    bindMessageHandler(): void;
    bindLiveHandler(): void;
    private HBResponse;
    private roomLoginResponse;
    private handleMultiRoom;
    isLogin(): boolean;
}
