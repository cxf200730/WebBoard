{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/src/views/Game2/components/app-stage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/src/views/Game2/components/app-stage.vue","mtime":1629207101350},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"app-stage.vue","sourceRoot":"src/views/Game2/components","sourcesContent":["<template>\n<div>\n  <div class=\"message\">\n    <span id=\"hehe\"></span>\n    <p  id=\"content\"></p>\n    <span id=\"d\"></span>\n    <ul id=\"BLEDevices\"></ul>\n    </div>\n\n  <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\">\n    \n\n<canvas id=\"myCanvas\" class=\"board\" width=\"100%\" height=\"960\" style=\"border:1px solid black;\"></canvas><br/>\n\n    <!-- <v-stage\n      :config=\"stageConfig\"\n      @mousedown=\"mousedownHandler\"\n      @mouseup=\"mouseupHandler\"\n      @mousemove=\"mousemoveHandler\"\n    >\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n    </v-stage> -->\n    <input type=\"button\" value=\"打开USB设备\"  @click=\"openUSB\"/>\n    <input type=\"button\" value=\"切换模式\" @click=\"changeMode\"/>\n  </el-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n    console.log(\"罗博版的宽和高\" + 29000 + \" \" +  21000);\n    console.log(\"屏幕的宽和高：\" + window.screen.width + \" \" +  window.screen.height )\n    // console.log(\"网页的宽和高：\" + window.screen.availWidth+ \" \" +window.screen.availHeight)\n    // console.log(\"网页内容的宽和高：\" + window.innerWidth + \" \" +  window.innerHeight)\n    console.log(\"宽高比\" + 29000 / window.screen.width + \" \" +  21000 / window.screen.height);\n  \n  },\n  mounted(){\n    // this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n        const that = this\n        this.canvas = document.getElementById('myCanvas')\n        this.context = this.canvas.getContext('2d')\n        // this.context.translate(this.offsetX, this.offsetY);\n// console.log(this.offsetX + \" \" + this.offsetY);\n        /*建立插件通信、添加响应函数*/\n            that.port = chrome.runtime.connect(that.editorExtensionId);\n            that.port.onMessage.addListener( function(msg){\n                that.recMessage(msg)\n            })\n\n            that.initCanvas(that.pid)\n\n    },\n  data() {\n    return {\n      // 画布配置\n      stageConfig: {\n        width: 800,\n        height: 700\n      },\n      // 绘画状态\n      painting: false,\n      stroke: '#df4b26',\n      strokeWidth: 2,\n      vid:1155,\n            pid:24672,\n            pageY : 8191, // 设备像素Y轴最大值\n            pageX : 14335, // 设备像素X轴最大值\n            port:\"\",           // 通信对象\n            editorExtensionId:'djkkhcnlplpchfbdgkdggcmlclggefbg',  // 通信ID\n\n            width : 870,\n            height : 630,\n            offsetX : 0.5,\n            offsetY : 0.5,\n            ratioX : 1, \n            ratioY : 1,\n            x1:2, y1:2, x2:2, y2:2, res : 2,\n            canvas : \"\",\n            context : \"\",\n            isStart : 0,\n    }\n  },\n  computed: {\n    ...mapState(['lines']),\n    ...mapGetters(['isGameStarted', 'isGameHolder'])\n  },\n\n  // mounted() {\n  //   // 将画布宽度设置与容器同宽\n  //   this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n  // },\n\n  methods: {\n    // 鼠标按下\n    mousedownHandler(e) {\n      if (!this.isGameHolder || !this.isGameHolder) return\n\n      this.painting = true\n      // 创建一个新线条\n      const newLine = {\n        stroke: this.stroke,\n        strokeWidth: this.strokeWidth,\n        points: [e.evt.layerX, e.evt.layerY]\n      }\n      // 本地画线, 存到vuex中\n      this.$store.commit('drawNewLine', newLine)\n      // 请求服务器\n      this.$store.dispatch('sendDrawNewLine', newLine)\n    },\n\n    // 鼠标拖动\n    mousemoveHandler(e) {\n      if (!this.painting) return\n      const lastLine = this.lines[this.lines.length - 1]\n      lastLine.points = lastLine.points.concat([e.evt.layerX, e.evt.layerY])\n      console.log(lastLine)\n      this.$store.commit('updateNewLine', lastLine)\n      // 请求服务器\n      this.$store.dispatch('sendUpdateNewLine', lastLine)\n    },\n\n    // 鼠标释放\n    mouseupHandler() {\n      this.painting = false\n    },\n    initCanvas(pid) {\n            const that = this\n            if (pid == 24672 || pid == 24682) {\n                // T8Y ｜｜ T8C\n                this.pageY = 21000\n                this.pageX = 29700\n            }\n            // this.height = $(window).height() > this.height ? this.height : $(window).height() - 20;\n            // this.width = parseInt(this.height * this.pageX / this.pageY);\n            // if(this.width > $(window).width() * 0.68){\n            //     this.width = parseInt($(window).width() * 0.68);\n            //     this.height = parseInt(this.width * this.pageY / this.pageX);\n            // }\n            \n            this.ratioX = this.width / this.pageX;\n            this.ratioY = this.height / this.pageY;\n            $(that.canvas).attr(\"width\", that.width);\n            $(that.canvas).attr(\"height\", that.height);\n            this.penInit()\n        },\n        recMessage(msg) {\n            switch (msg.status) {\n                case 0:\n                    $('#hehe').html('设备连接成功');\n                    break;\n                case 1:\n                    this.lineTo(msg.x, msg.y, msg.s, msg.p);\n                    break;\n                case 2:\n                    $('#hehe').html('usb操作权限获取失败');\n                    break;\n                case 3:\n                    $('#hehe').html('指定的usb设备未找到');\n                    break;\n                case 4:\n                    $('#hehe').html('usb设备连接失败及打开设备失败');\n                    break;\n                case 5: \n                    $('#hehe').html('存在打开的设备');\n                    break;\n                case 6:\n                    if (msg.mode == 'mouse') {\n                        $('#hehe').html('当前模式为鼠标模式');\n                    }else if (msg.mode == 'pen') {\n                        $('#hehe').html('当前模式为笔模式');\n                    }\n                    break;\n                case 20:\n                    $('#hehe').html(msg.dongle_status);\n                    break;\n                case 21:\n                    $('#BLEDevices').append(\"<li>\"+msg.device_name+\"<button  onclick='connectBLE(\"+msg.num+\")'>连接</button></li>\");\n                    break;\n                        case 32:\n                            window.alert('左键单击')\n                            break;\n                        case 33:\n                            window.alert('左键双击')\n                            break;\n                        case 34:\n                            window.alert('左键长按')\n                            break;\n                        case 35:\n                            window.alert('右键单击')\n                            break;\n                        case 36:\n                            window.alert('右键双击')\n                            break;\n                        case 37:\n                            window.alert('右键长按')\n                            break;\n                case 100:\n                    let c = document.getElementById('myCanvas');\n                    c.height = c.height;\n                    break;\n            }\n        },\n        penInit(){\n            this.closeUSB()\n        },\n        //打开USB设备\n        openUSB(){\n            let VID = this.vid;\n            let PID = this.pid;\n            this.port.postMessage({cmd:'openUSB',pid: PID,vid: VID});\n            this.changeMode()\n        },\n        //关闭USB设备\n        closeUSB(){\n            this.port.postMessage({cmd:'closeUSB'});\n            \n        },\n        //获取dongle状态\n        getDongleStatus() {\n            console.log(123);\n            this.port.postMessage({cmd:'dongleStatus'});\n        },\n        //扫描蓝牙\n        scanBLE(){\n            this.port.postMessage({cmd:'scanBLE'});\n        },\n        //连接蓝牙设备\n        connectBLE(num) {\n            this.port.postMessage({cmd:'connectBLE',num: num});\n        },\n        //断开蓝牙\n        disconnectBLE() {\n            this.port.postMessage({cmd:'closeBLE'});\n        },\n        // 切换笔模式\n        changeMode() {\n            this.port.postMessage({cmd:'changeMode'});\n        },\n        // clear canvas\n        clearCanvas(){\n            let c = document.getElementById('myCanvas');\n            c.height = c.height;\n            this.port.postMessage({cmd:'clearCanvas'});\n        },\n\n        lineTo(x, y, s, p){\n            let tx = this.ratioX * x;\n            let ty = this.ratioY * y;\n            let tw = 1.2;\n            let con = 'x='+x+',y='+y+',s='+s+',p='+p;\n            $('#content').text(con);\n            if (s == 16 || s == 0) {\n                this.isStart = 0;\n                return;\n            }\n            if(this.isStart > 0){\n                this.x2 = Math.floor(this.ratioX * x);\n                this.y2 = Math.floor(this.ratioY * y);\n                let d = Math.sqrt(Math.pow(this.x1 - this.x2, 2) + Math.pow(this.y1 - this.y2, 2));\n                if(d > this.res){\n                    tx = Math.round((this.x1 + this.x2) / 2 * 100) / 100;\n                    ty = Math.round((this.y1 + this.y2) / 2 * 100) / 100;\n                    if (this.isStart == 1) {\n                        this.context.lineTo(tx, ty);\n                    } else {\n                        this.context.quadraticCurveTo(this.x1, this.y1, tx, ty);\n                        this.context.lineWidth = tw;\n                        this.context.stroke();\n                        this.context.beginPath();\n                        this.context.moveTo(tx,ty);\n                    }\n                    this.x1 = this.x2;\n                    this.y1 = this.y2;\n                }\n                this.isStart++;\n            }else{\n                /* 初始化画点*/\n                this.isStart = 1;\n                this.context.beginPath();\n                this.context.lineCap = \"round\";\n                this.context.strokeStyle = \"#000\";//新增\n                this.x1 = tx;\n                this.y1 = ty;\n                this.context.moveTo(tx, ty);//起点\n                this.isStart++;\n            }\n        }\n\n    \n  }\n}\n</script>\n"]}]}