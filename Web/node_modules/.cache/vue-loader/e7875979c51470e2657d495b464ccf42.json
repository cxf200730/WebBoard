{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue?vue&type=style&index=0&id=45c64ab2&lang=less&scoped=true&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue","mtime":1631169361686},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/less-loader/dist/cjs.js","mtime":1629251458000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1jYXJkewogIHRvdWNoLWFjdGlvbjogbm9uZTsKICBoZWlnaHQ6IDY0MHB4OwogIHdpZHRoOiA1OTBweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigzMywgMzMsIDMzKTsKfQoKLmluZm97CiAgICAgICBoZWlnaHQ6IDIwcHg7CiAgICAgICB3aWR0aDogNTc1cHg7CiAgICAgICBwYWRkaW5nOiAxMHB4OwogICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7CiAgICAgIC8vICBmb250LXNpemU6IDIwcHg7CiAgICAgIC8vICBib3JkZXI6IzAwMDAwMCBzb2xpZCAxcHg7CiAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiBjaGFydHJldXNlOwogICAgIH0KICAgICAuaXRlbXsKICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICAgfQogICAgLmVsLXNjcm9sbGJhciB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBtYXgtaGVpZ2h0OiA2MjBweDsKICAgIHdpZHRoOiA3MHB4OwogICAgLy8gb3ZlcmZsb3c6IGF1dG87CiAgICAvLyBvdmVyZmxvdy14OiBzY3JvbGw7Cn0K"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappingskyBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app-stage.vue","sourceRoot":"src/views/Student/components","sourcesContent":["<template>\n<div style=\"display:flex\">\n  <div>\n    <div class=\"info\">\n      <div>\n        <span>第五讲 扫雷</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>第一题</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>共12题</span>\n      </div>\n      <div>\n          <el-divider direction=\"vertical\"></el-divider>\n        <i @touchstart=\"beforeTopic\">上一题</i>\n          <el-divider direction=\"vertical\"></el-divider>\n        <i @touchstart=\"nextTopic\">下一题</i>\n          <el-divider direction=\"vertical\"></el-divider>\n        <!-- <span @click = \"remove\">提交</span> -->\n      </div>\n    </div>\n  \n    <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\" id=\"card\">\n    <v-stage\n      id=\"stage\"\n      :config=\"stageConfig\"\n      @touchstart=\"touchstartHandler\"\n      @touchmove=\"touchmoveHandler\"\n      @touchend=\"touchendHandler\"\n    >\n      <v-layer>\n      <!-- 学生实时画的线 -->\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 老师实时画的线 -->\n        <v-line\n          v-for=\"(line, index) in teacherLines[id-1]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 学生保存的笔迹 -->\n        <v-line\n          v-for=\"(line, index) in topic[index]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 老师保存的笔迹 -->\n        <v-line\n          v-for=\"(line, index) in topic2[index]\"\n          :key=\"index\"\n          :config=\"{\n            stroke: '#d42d1f',\n            strokeWidth:1.5,\n            points:line.points,\n            lineCap: line.lineCap,\n            lineJoin: line.lineJoin,\n            bezier:line.bezier,\n            rotation:line.rotation,}\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 试卷题目 -->\n        <v-line\n          v-for=\"(line, index) in initexam[index]\"\n          :key=\"index\"\n          :config=\"{\n            stroke: '#FFF111',\n            strokeWidth:1.5,\n            points:line.points,\n            lineCap: line.lineCap,\n            lineJoin: line.lineJoin,\n            bezier:line.bezier,\n            rotation:line.rotation,}\"\n        />\n      </v-layer>\n    </v-stage>\n  </el-card>\n  </div>\n\n  <div style=\"margin:0 auto;margin-top:50px;\">\n    <el-scrollbar  max-height=\"400px\">\n      <el-button  @click=\"chooseItem(item)\" style=\"margin-left:10px\" size=\"small\" class=\"item\" v-for=\"item in 5\" :key=\"item\">\n        {{ item }}\n      </el-button>\n    </el-scrollbar>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n    const that = this\n    let exam = []\n    // 页面初始化获取试卷题目，并保存到VueX中\n    this.axios.get('http://192.168.51.117:3000/exam',{\n      }).then((res)=>{\n        for (let k = 0; k < res.data.message.length; k++) {\n          const count = JSON.parse(res.data.message[k].topic_content)\n          for (let i = 0; i < count.length; i++) {\n            for (let j = 0; j < count[i].points.length; j++) {\n              if(j % 2 == 0){\n                count[i].points[j] *= that.getXb\n              }else{\n                count[i].points[j] *= that.getYb\n              }\n            }\n          }\n          exam[k] = count\n        }\n      this.$store.commit('initexam', exam)\n    })\n  },\n  mounted(){\n    this.id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n    window.addEventListener('touchmove', function(){}, { passive: false })\n    this.getXb = document.getElementById('card').clientWidth\n    this.getYb = document.getElementById('card').clientHeight\n    this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    this.stageConfig.height = this.$refs.wrapper.$el.offsetHeight\n    this.$store.commit('initXb', this.getXb)\n    this.$store.commit('initYb', this.getYb)\n    const that = this\n    // 获取之前保存的笔迹\n    this.axios.post('http://192.168.51.117:3000/student/gettopic',{\n      stucode:localStorage.getItem('teacherphone'),\n    }).then((res)=>{\n      for (let k = 0; k < res.data.message.length; k++) {\n        let count\n        let count2\n        // 学生做题笔迹\n        count = JSON.parse(res.data.message[k].stuanswer)\n        // 老师批改笔迹\n        if(res.data.message[k].updateanswer != null){\n          count2 = JSON.parse(res.data.message[k].updateanswer)\n        }\n        // 获取数据库学生做题的笔迹保存到that.topic\n        for (let i = 0; i < count.length; i++) {\n          for (let j = 0; j < count[i].points.length; j++) {\n            if(j % 2 == 0){\n              count[i].points[j] *= that.getXb\n            }else{\n              count[i].points[j] *= that.getYb\n            }\n          }\n        }\n        that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n        // 获取数据库老师批改的笔迹保存到that.topic2\n        if(count2 != undefined){\n          for (let i = 0; i < count2.length; i++) {\n            for (let j = 0; j < count2[i].points.length; j++) {\n              if(j % 2 == 0){\n                count2[i].points[j] *= that.getXb\n              }else{\n                count2[i].points[j] *= that.getYb\n              }\n            }\n          }\n        }\n        if(count2 != undefined)\n          that.topic2[parseInt(res.data.message[k].topic_index - 1)] = count2\n      }\n    })\n  },\n\n  data() {\n    return {\n      // 画板的宽\n      getXb:1,\n      // 画板的高\n      getYb:1,\n      // 画布配置\n      stageConfig: {\n        width: 560,\n        height: 450\n      },\n      // 绘画状态\n      painting: false,\n      // 画笔颜色\n      stroke: '#000000',\n      // 画笔宽度\n      strokeWidth: 2,\n      // 学生学号后两位\n      id:0,\n      getlines:[],\n      // 学生答题记录\n      topic:[[],[],[],[],[]],\n      // 老师批改记录\n      topic2:[[],[],[],[],[]],\n      // 当前显示下标\n      index:0\n    }\n\n  },\n  computed: {\n    // 学生实时画的线，老师实时画的线，要保存的线，试卷题目\n    ...mapState(['lines','teacherLines','savelines','initexam'])\n  },\n\n \n  methods: {\n    chooseItem(index){\n      this.$store.commit('clearLine')\n      let temp = this.index + 1\n      // console.log();\n      // console.log(this.topic[this.index].length);\n      this.index = index - 1\n     \n      const that = this\n      that.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:that.index + 1})\n    \n      // console.log(this.savelines);\n      if(this.savelines.length != 0){\n        \n        if(this.topic[temp - 1].length === 0){\n          console.log(\"new\");\n          this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:(temp).toString(),\n            stuanswer:this.savelines,\n            // update_answer:\"\",\n            fintime:\"0\"\n          }).then((res)=>{\n            if(res.data.err_code === 0){\n              // alert(\"保存成功\")\n              that.$store.commit('clearsaveLine')\n\n              that.axios.post('http://192.168.51.117:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  const count2 = JSON.parse(res.data.message[k].updateanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n        \n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                       \n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n\n            }\n          })\n        }else{\n          console.log(\"update\");\n          that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  that.savelines.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                // console.log(that.savelines);\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then(res => {\n                // console.log(res.data);\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.117:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  const count2 = JSON.parse(res.data.message[k].updateanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  if(count2 != null){\n            \n          that.topic2[parseInt(res.data.message[k].topic_index - 1)] =count2\n          }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n              })\n              })\n        }\n    \n      }\n\n    },\n    // 下一题\n    nextTopic(){\n      const that = this\n      if(this.index == 4){\n        this.index = 4\n      }else{\n        this.index++\n        //定义一个变量用来判断老师是否需要更新数据\n        var isupdate = 0\n         // 如果切换题目的时候，学生在上一块画板上画过\n        if(this.savelines.length != 0){\n          isupdate=1\n          let savetemp = this.savelines\n          // 清空saveline\n          this.$store.commit('clearsaveLine')\n          // 如果上一块画板是空画板，则添加一条新纪录\n          if(this.topic[this.index - 1].length === 0){\n            let saveindex = this.index - 1\n            // 把学生实时笔迹保存到本地变量\n            this.topic[parseInt(saveindex)] = this.lines\n            // 清空学生实时笔迹\n            this.$store.commit('clearLine')\n            this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(this.index).toString(),//第几道题\n              stuanswer:savetemp,\n              fintime:\"0\"\n            }).then((res)=>{\n              \n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            let saveindex = this.index\n            let templines = []\n            for (let i = 0; i < this.lines.length; i++) {\n              templines[i] = this.lines[i]\n            }\n            this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(saveindex).toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                // 找到后，把之前保存的点的数据添加到savetemp后面，然后再将数据库中的数据修改成savetemp\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  savetemp.push(JSON.parse(res.data.message[0].stuanswer)[i]) \n                }\n                for (let i = 0; i < count.length; i++) {\n                  for (let j = 0; j < count[i].points.length; j++) {\n                    if(j % 2 === 0){\n                      count[i].points[j] *= that.getXb\n                    }else{\n                      count[i].points[j] *= that.getYb\n                    }\n                    templines.push(count[i])\n                  }\n                }\n                  that.topic[parseInt(saveindex-1)] = templines\n                  \n                // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(saveindex).toString(),\n                stuanswer:savetemp\n              }).then(res => {\n                \n              })\n            })\n          }\n        }\n        // 如果切换题目的时候，老师在上一块板画过\n        if(this.teacherLines[this.id-1].length != 0){\n          isupdate+=10\n          // 保存老师画的笔迹\n          let savetemp = []\n          let templines = []\n          let saveindex = this.index\n          \n\n          if(this.topic2[parseInt(saveindex - 1)].length === 0){\n            for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n            savetemp[i] = this.teacherLines[this.id-1][i]\n            templines[i] = this.teacherLines[this.id-1][i]\n          }\n          // 清空老师的实时笔迹\n          this.$store.commit('clearteacherLine',this.id-1)\n            // 把点换算为百分比的点\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] /= this.getXb\n                }else{\n                  savetemp[i].points[j] /= this.getYb\n                }\n              }\n            }\n\n          // 保存老师画的点\n          that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:saveindex.toString(),\n            updateanswer:savetemp,\n            fintime:\"0\"\n          }).then(res => {\n            \n            // 重新获取数据库中最新的数据\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] *= that.getXb\n                }else{\n                  savetemp[i].points[j] *= that.getYb\n                }\n              }\n            }\n            that.topic2[parseInt(saveindex - 1)] = savetemp\n          })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n              savetemp[i] = this.teacherLines[this.id-1][i]\n              templines[i] = this.teacherLines[this.id-1][i]\n            }\n              // 清空老师的实时笔迹\n              this.$store.commit('clearteacherLine',this.id-1)\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].updateanswer)\n                let count2 = JSON.parse(res.data.message[0].updateanswer)\n                new Promise((reslove,rej) => {\n                  for (let i = 0; i < count.length; i++) {\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 === 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                    templines.push(count[i])\n                  }\n                that.topic2[parseInt(saveindex - 1)] = templines\n                console.log(templines);\n                reslove(\"yes\")\n               }).then(res=>{\n                  let temp = []\n                  for (let i = 0; i < savetemp.length; i++) {\n                    temp.push(JSON.parse(JSON.stringify(savetemp[i])))\n                  }\n                 for (let i = 0; i < temp.length; i++) {\n                    for (let j = 0; j < temp[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        temp[i].points[j] /= this.getXb\n                      }else{\n                        temp[i].points[j] /= this.getYb\n                      }\n                    }\n                  }\n                  for (let i = 0; i < count2.length; i++) {\n                    temp.push(count2[i])\n                  }\n                  // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n                  stucode:localStorage.getItem('teacherphone'),\n                  room:\"1001\",\n                  exam_code:\"1001\",\n                  topic_index:(saveindex).toString(),\n                  updateanswer:temp\n                }).then(res => {\n              \n                })\n                })\n               })\n               \n                \n                \n             \n            \n          }  \n        }\n        // 给老师发学号后两位和题号,更新数据那些数据\n        // 0不更新 1只更新学生 10只更新老师 11都更新\n        this.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:this.index + 1,isupdate:isupdate})\n      }\n    },\n    // 上一题\n    beforeTopic(){\n      const that = this\n      if(this.index == 0){\n        this.index = 0\n      }else{\n        this.index--\n        //定义一个变量用来判断老师是否需要更新数据\n        var isupdate = 0\n        // 如果切换题目的时候，学生在上一块画板上画过\n        if(this.savelines.length != 0){\n          isupdate=1\n          let savetemp = this.savelines\n          // 先清空saveline\n          this.$store.commit('clearsaveLine')\n          // 如果上一块画板是空画板，则添加一条新纪录\n          if(this.topic[this.index +1].length === 0){\n            let saveindex = this.index + 1\n            that.topic[parseInt(saveindex)] = this.lines\n            this.$store.commit('clearLine')\n            this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(this.index + 2).toString(),//第几道题\n              stuanswer:savetemp,\n              fintime:\"0\"\n            }).then((res)=>{\n              // console.log(1);\n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            let saveindex = this.index + 2\n            let templines = []\n            for (let i = 0; i < this.lines.length; i++) {\n              templines[i] = this.lines[i]\n            }\n            this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                // 找到后，把之前保存的点的数据添加到savetemp后面，然后再将数据库中的数据修改成savetemp\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  savetemp.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                for (let i = 0; i < count.length; i++) {\n                  for (let j = 0; j < count[i].points.length; j++) {\n                    if(j % 2 === 0){\n                      count[i].points[j] *= that.getXb\n                    }else{\n                      count[i].points[j] *= that.getYb\n                    }\n                    templines.push(count[i])\n                  }\n                }\n                  that.topic[parseInt(saveindex - 1)] = templines\n                // 修改数据库中的数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:saveindex.toString(),\n                stuanswer:savetemp\n              }).then(res => {\n                \n              })\n            })\n          }\n        }\n        // 如果切换题目的时候，老师在上一块板画过\n        if(this.teacherLines[this.id-1].length != 0){\n          isupdate+=10\n          // 保存老师画的笔迹\n          let savetemp = []\n          let templines = []\n          let saveindex = this.index + 2\n          for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n            savetemp[i] = this.teacherLines[this.id-1][i]\n            templines[i] = this.teacherLines[this.id-1][i]\n          }\n          // 清空老师的实时笔迹\n          this.$store.commit('clearteacherLine',this.id-1)\n          if(this.topic2[this.index +1].length === 0){\n            // 把点换算为百分比的点\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] /= this.getXb\n                }else{\n                  savetemp[i].points[j] /= this.getYb\n                }\n              }\n            }\n            // 保存老师画的点\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString(),\n              updateanswer:savetemp,\n              fintime:\"0\"\n            }).then(res => {\n              // 清空老师的实时笔迹\n            this.$store.commit('clearteacherLine',this.id-1)\n              // 重新获取数据库中最新的数据\n              for (let i = 0; i < savetemp.length; i++) {\n                for (let j = 0; j < savetemp[i].points.length; j++) {\n                  if(j % 2 == 0){\n                    savetemp[i].points[j] *= that.getXb\n                  }else{\n                    savetemp[i].points[j] *= that.getYb\n                  }\n                }\n              }\n              that.topic2[parseInt(saveindex - 1)] = savetemp\n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n             // 清空老师的实时笔迹\n            this.$store.commit('clearteacherLine',this.id-1)\n            // this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].updateanswer)\n                let count2 = JSON.parse(res.data.message[0].updateanswer)\n                new Promise((reslove,rej) => {\n                  for (let i = 0; i < count.length; i++) {\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 === 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                    templines.push(count[i])\n                  }\n                that.topic2[parseInt(saveindex - 1)] = templines\n                console.log(templines);\n                reslove(\"yes\")\n               }).then(res=>{\n                  let temp = []\n                  for (let i = 0; i < savetemp.length; i++) {\n                    temp.push(JSON.parse(JSON.stringify(savetemp[i])))\n                  }\n                 for (let i = 0; i < temp.length; i++) {\n                    for (let j = 0; j < temp[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        temp[i].points[j] /= this.getXb\n                      }else{\n                        temp[i].points[j] /= this.getYb\n                      }\n                    }\n                  }\n                  for (let i = 0; i < count2.length; i++) {\n                    temp.push(count2[i])\n                  }\n                  // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n                  stucode:localStorage.getItem('teacherphone'),\n                  room:\"1001\",\n                  exam_code:\"1001\",\n                  topic_index:(saveindex).toString(),\n                  updateanswer:temp\n                }).then(res => {\n              \n                })\n                })\n               })\n  \n          }\n          \n          \n        }\n          // 给老师发学号后两位和题号,更新数据那些数据\n          // 0不更新 1只更新学生 10只更新老师 11都更新\n        this.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:this.index + 1,isupdate:isupdate})\n      }\n    },\n    \n    remove(){\n      this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n        stucode:localStorage.getItem('teacherphone'),\n        room:\"1001\",\n        exam_code:\"1001\",\n        topic_index:(this.index + 1).toString(),\n        stuanswer:this.savelines,\n        // update_answer:\"\",\n        fintime:\"0\"\n      }).then((res)=>{\n        if(res.data.err_code === 0){\n          alert(\"保存成功\")\n        }\n      })\n    },\n    \n    // 笔按下\n    touchstartHandler(e) {\n      this.painting = true\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      // 创建一个新线条\n      const newLine = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        lineJoin: 'round',\n        preventDefault: false,\n        // bezier:true,\n        rotation:0.1,\n      }\n      const newLine2 = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        lineJoin: 'round',\n        preventDefault: false,\n        rotation:0.1,\n      }\n      // 请求服务器\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      this.$store.dispatch('sendDrawNewLine', {newLine:newLine,id:id})\n      \n      // 本地画线, 存到vuex中\n      this.$store.commit('saveNewLine', newLine)\n      this.$store.commit('drawNewLine', newLine2)\n      \n     },\n\n    // 笔拖动\n    touchmoveHandler(e) {\n      if (!this.painting) return\n      this.nowX = document.getElementById('card').clientWidth\n      const lastLine = this.lines[this.lines.length - 1]\n      const savelastLine = this.savelines[this.savelines.length - 1]\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      lastLine.points = lastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      savelastLine.points = savelastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      if(lastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n      if(savelastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n     \n      // 请求服务器\n      this.$store.dispatch('stuUpdateNewLine', {lastLine:lastLine,id:id})\n      this.$store.commit('saveupdateNewLine1', savelastLine)\n      this.$store.commit('updateNewLine1', lastLine)\n    },\n\n    // 笔释放\n    touchendHandler() {\n      this.painting = false\n    },\n    \n    \n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-card{\n  touch-action: none;\n  height: 640px;\n  width: 590px;\n  overflow: hidden;\n  background-color: rgb(33, 33, 33);\n}\n\n.info{\n       height: 20px;\n       width: 575px;\n       padding: 10px;\n       line-height: 25px;\n      //  font-size: 20px;\n      //  border:#000000 solid 1px;\n       display: flex;\n       justify-content: space-between;\n      // background-color: chartreuse;\n     }\n     .item{\n       margin-bottom: 10px;\n     }\n    .el-scrollbar {\n    position: relative;\n    max-height: 620px;\n    width: 70px;\n    // overflow: auto;\n    // overflow-x: scroll;\n}\n</style>\n"]}]}