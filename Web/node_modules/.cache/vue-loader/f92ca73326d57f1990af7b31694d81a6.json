{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Game/components/app-stage.vue?vue&type=style&index=0&id=6a26facc&lang=less&scoped=true&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Game/components/app-stage.vue","mtime":1629600315125},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/less-loader/dist/cjs.js","mtime":1629251458000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWNhcmR7CiAgdG91Y2gtYWN0aW9uOiBub25lOwogIGhlaWdodDogNDUwOwogIG92ZXJmbG93OiBoaWRkZW47Cn0K"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA","file":"app-stage.vue","sourceRoot":"src/views/Game/components","sourcesContent":["<template>\n<div>\n  <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\" id=\"card\">\n    <v-stage\n      id=\"stage\"\n      :config=\"stageConfig\"\n      @mousedown=\"mousedownHandler\"\n      @mouseup=\"mouseupHandler\"\n      @mousemove=\"mousemoveHandler\"\n      @touchstart=\"touchstartHandler\"\n      @touchmove=\"touchmoveHandler\"\n      @touchend=\"touchendHandler\"\n    >\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n    </v-stage>\n  </el-card>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n  },\n\n  mounted(){\n    this.getXb =  document.getElementById('card').clientWidth\n    this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    this.$store.commit('initXb', this.getXb)\n    const that = this\n    window.addEventListener('touchmove', function(){}, { passive: false })\n  },\n\n  data() {\n    return {\n      linesIndex:0,\n      lineIndex:0,\n      // 画布配置\n      stageConfig: {\n        width: 1300,\n        height: 450\n      },\n      // 绘画状态\n      painting: false,\n      stroke: '#000000',\n      strokeWidth: 1,\n      getXb:1,\n    }\n  },\n\n  computed: {\n    ...mapState(['lines']),\n    ...mapGetters(['isGameStarted', 'isGameHolder']),\n  },\n\n  methods: {\n    // 鼠标按下\n    mousedownHandler(e) {\n      if (!this.isGameHolder || !this.isGameHolder) return\n      this.painting = true\n      // 创建一个新线条\n      const newLine = {\n        stroke: this.stroke,\n        strokeWidth: this.strokeWidth,\n        points: [e.evt.layerX / this.getXb, e.evt.layerY]\n      }\n      // 请求服务器\n      this.$store.dispatch('sendDrawNewLine', newLine)\n      // 本地画线, 存到vuex中\n      this.$store.commit('drawNewLine', newLine)\n    },\n\n    // 鼠标拖动\n    mousemoveHandler(e) {\n      if (!this.painting) return\n      const lastLine = this.lines[this.lines.length - 1]\n      lastLine.points = lastLine.points.concat([e.evt.layerX / this.getXb, e.evt.layerY]) \n      console.log(\"11\"+lastLine.points[lastLine.points.length-2])\n      // 请求服务器\n      this.$store.dispatch('sendUpdateNewLine', lastLine)\n      this.$store.commit('updateNewLine1', lastLine)\n    },\n\n    // 鼠标释放\n    mouseupHandler() {\n      this.painting = false\n    },\n\n    // 笔按下\n    touchstartHandler(e) {\n      if (!this.isGameHolder || !this.isGameHolder) return\n      this.painting = true\n      let newX = e.evt.changedTouches[0].clientX-$('#card').offset().left\n      let newY = e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop()\n      // 创建一个新线条\n      const newLine = {\n        stroke: this.stroke,\n        strokeWidth: this.strokeWidth,\n        points: [newX / this.getXb , newY]\n      }\n      // 请求服务器\n      this.$store.dispatch('sendDrawNewLine', newLine)\n      // 本地画线, 存到vuex中\n      this.$store.commit('drawNewLine', newLine)\n     },\n\n    // 笔拖动\n    touchmoveHandler(e) {\n      if (!this.painting) return\n      this.nowX = document.getElementById('card').clientWidth\n      const lastLine = this.lines[this.lines.length - 1]\n      let newX = e.evt.changedTouches[0].clientX-$('#card').offset().left\n      let newY = e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop()\n      lastLine.points = lastLine.points.concat([newX / this.getXb , newY])\n\n      // 请求服务器\n      this.$store.dispatch('sendUpdateNewLine', lastLine)\n      this.$store.commit('updateNewLine1', lastLine)\n    },\n    // 笔释放\n\n    touchendHandler() {\n      this.painting = false\n    },\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-card{\n  touch-action: none;\n  height: 450;\n  overflow: hidden;\n}\n</style>\n\n"]}]}