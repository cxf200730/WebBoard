{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/common.js","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/common.js","mtime":1630544787812},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/common.js"],"names":["VConsole","ZegoExpressEngine","getCgi","getBrowser","userName","Date","getTime","tokenUrl","userID","publishStreamId","zg","appID","server","cgiToken","previewVideo","useLocalStreamList","isPreviewed","supportScreenSharing","loginRoom","localStream","publishType","l3","roomList","$","get","rsp","data","console","log","browser","versions","u","navigator","userAgent","app","appVersion","trident","indexOf","presto","webKit","gecko","mobile","match","ios","android","iPhone","iPad","webApp","weixin","qq","language","browserLanguage","toLowerCase","window","checkAnRun","checkScreen","checkSystemRequirements","result","videoCodec","H264","attr","VP8","webRTC","alert","screenSharing","start","error","initSDK","setLogConfig","logLevel","remoteLogLevel","logURL","setDebugVerbose","setSoundLevelDelegate","click","loginSuc","enterRoom","publish","logout","enumDevices","audioInputList","videoInputList","deviceInfo","microphones","map","item","index","deviceName","push","deviceID","cameras","html","join","on","roomID","state","errorCode","extendedData","warn","updateType","userList","JSON","stringify","info","streamID","videos","i","length","srcObject","streamList","remoteStream","playOption","val","resourceMode","startPlayingStream","then","stream","videoTemp","append","video","muted","err","k","j","stopPlayingStream","remove","splice","streamQuality","videoFPS","videoBitrate","audio","audioBitrate","audioFPS","status","forEach","type","Math","round","soundLevel","device","deviceType","count","login","roomId","token","app_id","id_name","cgi_token","userUpdate","findIndex","room","stopPublishingStream","destroyStream","hasClass","addClass","logoutRoom","constraints","isNew","camera","undefined","_constraints","audioInput","videoInput","Object","assign","controls","playType","extraInfo","publishOption","createStream","removeClass","startPublishingStream","name","message","mutePublishStreamVideo","toggleClass","mutePublishStreamAudio"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,wBAAP;AACA,OAAO,4BAAP;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,IAAIH,QAAJ;AACA,IAAMI,QAAQ,GAAG,eAAe,IAAIC,IAAJ,GAAWC,OAAX,EAAhC;AACA,IAAMC,QAAQ,GAAG,6CAAjB;AACA,IAAIC,MAAM,GAAG,WAAW,IAAIH,IAAJ,GAAWC,OAAX,EAAxB;AACA,IAAIG,eAAe,GAAG,WAAW,IAAIJ,IAAJ,GAAWC,OAAX,EAAjC;AACA,IAAII,EAAJ;AACA,IAAIC,KAAK,GAAG,UAAZ,C,CAAwB;;AACxB,IAAIC,MAAM,GAAG,mCAAb,C,CAAkD;;AAElD,IAAIC,QAAQ,GAAG,EAAf,C,CACA;;AACA,IAAIC,YAAJ;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,oBAAoB,GAAG,KAA3B;AACA,IAAIC,SAAS,GAAG,KAAhB;AAEA,IAAIC,WAAJ;AACA,IAAIC,WAAJ;AAEA,IAAIC,EAAJ;AACA,IAAIC,QAAQ,GAAG,EAAf,C,CAEA;AACA;;cAE2CpB,MAAM,CAACS,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,C;;AAA9CF,K,WAAAA,K;AAAOC,M,WAAAA,M;AAAQC,Q,WAAAA,Q;AAAUL,M,WAAAA,M;AAAQa,E,WAAAA,E;AACpC,IAAIb,MAAM,IAAI,EAAd,EAAkBA,MAAM,GAAG,WAAW,IAAIH,IAAJ,GAAWC,OAAX,EAApB;;AAElB,IAAIO,QAAQ,IAAIN,QAAQ,IAAI,6CAA5B,EAA2E;AACvEgB,EAAAA,CAAC,CAACC,GAAF,CAAMX,QAAN,EAAgB,UAAAY,GAAG,EAAI;AACnBZ,IAAAA,QAAQ,GAAGY,GAAG,CAACC,IAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACH,GAHD;AAIH,C,CAED;AACA;;;AAEA,IAAIgB,OAAO,GAAG;AACVC,EAAAA,QAAQ,EAAC,YAAU;AACf,QAAIC,CAAC,GAAGC,SAAS,CAACC,SAAlB;AAAA,QAA6BC,GAAG,GAAGF,SAAS,CAACG,UAA7C;AACA,WAAO;AACHC,MAAAA,OAAO,EAAEL,CAAC,CAACM,OAAF,CAAU,SAAV,IAAuB,CAAC,CAD9B;AACiC;AACpCC,MAAAA,MAAM,EAAEP,CAAC,CAACM,OAAF,CAAU,QAAV,IAAsB,CAAC,CAF5B;AAE+B;AAClCE,MAAAA,MAAM,EAAER,CAAC,CAACM,OAAF,CAAU,aAAV,IAA2B,CAAC,CAHjC;AAGoC;AACvCG,MAAAA,KAAK,EAAET,CAAC,CAACM,OAAF,CAAU,OAAV,IAAqB,CAAC,CAAtB,IAA2BN,CAAC,CAACM,OAAF,CAAU,OAAV,KAAsB,CAAC,CAJtD;AAIwD;AAC3DI,MAAAA,MAAM,EAAE,CAAC,CAACV,CAAC,CAACW,KAAF,CAAQ,uBAAR,CALP;AAKyC;AAC5CC,MAAAA,GAAG,EAAE,CAAC,CAACZ,CAAC,CAACW,KAAF,CAAQ,+BAAR,CANJ;AAM8C;AACjDE,MAAAA,OAAO,EAAEb,CAAC,CAACM,OAAF,CAAU,SAAV,IAAuB,CAAC,CAAxB,IAA6BN,CAAC,CAACM,OAAF,CAAU,KAAV,IAAmB,CAAC,CAPvD;AAO0D;AAC7DQ,MAAAA,MAAM,EAAEd,CAAC,CAACM,OAAF,CAAU,QAAV,IAAsB,CAAC,CAR5B;AAQgC;AACnCS,MAAAA,IAAI,EAAEf,CAAC,CAACM,OAAF,CAAU,MAAV,IAAoB,CAAC,CATxB;AAS2B;AAC9BU,MAAAA,MAAM,EAAEhB,CAAC,CAACM,OAAF,CAAU,QAAV,KAAuB,CAAC,CAV7B;AAUgC;AACnCW,MAAAA,MAAM,EAAEjB,CAAC,CAACM,OAAF,CAAU,gBAAV,IAA8B,CAAC,CAXpC;AAWuC;AAC1CY,MAAAA,EAAE,EAAElB,CAAC,CAACW,KAAF,CAAQ,OAAR,KAAoB,KAZrB,CAY2B;;AAZ3B,KAAP;AAcH,GAhBQ,EADC;AAkBVQ,EAAAA,QAAQ,EAAC,CAAClB,SAAS,CAACmB,eAAV,IAA6BnB,SAAS,CAACkB,QAAxC,EAAkDE,WAAlD;AAlBC,CAAd,C,CAqBA;;AACA1C,EAAE,GAAG,IAAIT,iBAAJ,CAAsBU,KAAtB,EAA6BC,MAA7B,CAAL;AAEAyC,MAAM,CAAC3C,EAAP,GAAYA,EAAZ;AACA2C,MAAM,CAACtC,kBAAP,GAA4BA,kBAA5B;;SAEeuC,U;;;;;wEAAf,kBAA0BC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAG6B7C,EAAE,CAAC8C,uBAAH,EAH7B;;AAAA;AAGcC,YAAAA,MAHd;AAKQ;AACA,aAACA,MAAM,CAACC,UAAP,CAAkBC,IAAnB,IAA2BpC,CAAC,CAAC,6BAAD,CAAD,CAAiCqC,IAAjC,CAAsC,UAAtC,EAAkD,UAAlD,CAA3B;AACA,aAACH,MAAM,CAACC,UAAP,CAAkBG,GAAnB,IAA0BtC,CAAC,CAAC,6BAAD,CAAD,CAAiCqC,IAAjC,CAAsC,UAAtC,EAAkD,UAAlD,CAA1B;;AAPR,gBASaH,MAAM,CAACK,MATpB;AAAA;AAAA;AAAA;;AAUYC,YAAAA,KAAK,CAAC,iCAAD,CAAL;AAVZ,8CAWmB,KAXnB;;AAAA;AAAA,kBAYmB,CAACN,MAAM,CAACC,UAAP,CAAkBC,IAAnB,IAA2B,CAACF,MAAM,CAACC,UAAP,CAAkBG,GAZjE;AAAA;AAAA;AAAA;;AAaYE,YAAAA,KAAK,CAAC,qCAAD,CAAL;AAbZ,8CAcmB,KAdnB;;AAAA;AAee,gBAAIN,MAAM,CAACC,UAAP,CAAkBC,IAAtB,EAA4B;AAC/B1C,cAAAA,oBAAoB,GAAGwC,MAAM,CAACO,aAA9B;AACA,kBAAIT,WAAW,IAAI,CAACtC,oBAApB,EAA0C8C,KAAK,CAAC,sCAAD,CAAL;AAC1CjD,cAAAA,YAAY,GAAGS,CAAC,CAAC,eAAD,CAAD,CAAmB,CAAnB,CAAf;AACA0C,cAAAA,KAAK;AACR,aALM,MAKA;AACHF,cAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;;AAtBT;AAAA,8CAwBe,IAxBf;;AAAA;AAAA;AAAA;AA0BQpC,YAAAA,OAAO,CAACuC,KAAR,CAAc,yBAAd;AA1BR,8CA2Be,KA3Bf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiCeD,K;;;;;mEAAf;AAAA;AAAA;AAAA;AAAA;AACIE,YAAAA,OAAO;AAEPzD,YAAAA,EAAE,CAAC0D,YAAH,CAAgB;AACZC,cAAAA,QAAQ,EAAE,OADE;AAEZC,cAAAA,cAAc,EAAE,MAFJ;AAGZC,cAAAA,MAAM,EAAE;AAHI,aAAhB;AAMA7D,YAAAA,EAAE,CAAC8D,eAAH,CAAmB,KAAnB;AACA9D,YAAAA,EAAE,CAAC+D,qBAAH,CAAyB,IAAzB,EAA+B,IAA/B;AAEAlD,YAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBmD,KAAjB,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,sBAAAA,QADe,GACJ,KADI;AAAA;AAAA;AAAA,6BAGEC,SAAS,EAHX;;AAAA;AAGfD,sBAAAA,QAHe;AAAA,qCAIfA,QAJe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAIIE,OAAO,EAJX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQflD,sBAAAA,OAAO,CAACuC,KAAR;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB;AAYA3C,YAAAA,CAAC,CAAC,WAAD,CAAD,CAAemD,KAAf,uEAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACXE,SAAS,EADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArB;AAIArD,YAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBmD,KAAhB,CAAsB,YAAY;AAC9BI,cAAAA,MAAM;AACT,aAFD;AAIAvD,YAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmD,KAApB,CAA0B,YAAM;AAC5BhE,cAAAA,EAAE,CAAC+D,qBAAH,CAAyB,KAAzB;AACH,aAFD;AAIAlD,YAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsBmD,KAAtB,CAA4B,YAAM;AAC9BhE,cAAAA,EAAE,CAAC+D,qBAAH,CAAyB,KAAzB;AACA/D,cAAAA,EAAE,CAAC+D,qBAAH,CAAyB,IAAzB;AACH,aAHD;;AApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0CeM,W;;;;;yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,cADV,GAC2B,EAD3B,EAEQC,cAFR,GAEyB,EAFzB;AAAA;AAAA,mBAG6BvE,EAAE,CAACqE,WAAH,EAH7B;;AAAA;AAGUG,YAAAA,UAHV;AAKIA,YAAAA,UAAU,IACNA,UAAU,CAACC,WAAX,CAAuBC,GAAvB,CAA2B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxC,kBAAI,CAACD,IAAI,CAACE,UAAV,EAAsB;AAClBF,gBAAAA,IAAI,CAACE,UAAL,GAAkB,eAAeD,KAAjC;AACH;;AACDN,cAAAA,cAAc,CAACQ,IAAf,CAAoB,qBAAqBH,IAAI,CAACI,QAA1B,GAAqC,IAArC,GAA4CJ,IAAI,CAACE,UAAjD,GAA8D,WAAlF,EAJwC,CAKxC;;AACA,qBAAOF,IAAP;AACH,aAPD,CADJ;AAUAH,YAAAA,UAAU,IACNA,UAAU,CAACQ,OAAX,CAAmBN,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACpC,kBAAI,CAACD,IAAI,CAACE,UAAV,EAAsB;AAClBF,gBAAAA,IAAI,CAACE,UAAL,GAAkB,WAAWD,KAA7B;AACH;;AACDL,cAAAA,cAAc,CAACO,IAAf,CAAoB,qBAAqBH,IAAI,CAACI,QAA1B,GAAqC,IAArC,GAA4CJ,IAAI,CAACE,UAAjD,GAA8D,WAAlF;AACA5D,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAayD,IAAI,CAACE,UAA9B;AACA,qBAAOF,IAAP;AACH,aAPD,CADJ;AAUAL,YAAAA,cAAc,CAACQ,IAAf,CAAoB,+BAApB;AACAP,YAAAA,cAAc,CAACO,IAAf,CAAoB,+BAApB;AAEAjE,YAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBoE,IAAhB,CAAqBX,cAAc,CAACY,IAAf,CAAoB,EAApB,CAArB;AACArE,YAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBoE,IAAhB,CAAqBV,cAAc,CAACW,IAAf,CAAoB,EAApB,CAArB;;AA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgCA,SAASzB,OAAT,GAAmB;AACfY,EAAAA,WAAW;AAEXrE,EAAAA,EAAE,CAACmF,EAAH,CAAM,iBAAN,EAAyB,UAACC,MAAD,EAASC,KAAT,EAAgBC,SAAhB,EAA2BC,YAA3B,EAA4C;AACjEtE,IAAAA,OAAO,CAACuE,IAAR,CAAa,mBAAb,EAAkCJ,MAAlC,EAA0CC,KAA1C,EAAiDC,SAAjD,EAA4DC,YAA5D;AACH,GAFD;AAGAvF,EAAAA,EAAE,CAACmF,EAAH,CAAM,gBAAN,EAAwB,UAACC,MAAD,EAASK,UAAT,EAAqBC,QAArB,EAAkC;AACtDzE,IAAAA,OAAO,CAACuE,IAAR,gCAC4BJ,MAD5B,oBAC4CK,UAAU,KAAK,KAAf,GAAuB,OAAvB,GAAiC,MAD7E,QAEIE,IAAI,CAACC,SAAL,CAAeF,QAAf,CAFJ;AAIH,GALD;AAMA1F,EAAAA,EAAE,CAACmF,EAAH,CAAM,sBAAN,EAA8B,UAAApC,MAAM,EAAI;AACpC;AACA,QAAIA,MAAM,CAACsC,KAAP,IAAgB,YAApB,EAAkC;AAC9BpE,MAAAA,OAAO,CAAC4E,IAAR,CAAa,uBAAuB9C,MAAM,CAAC+C,QAA3C;AACH,KAFD,MAEO,IAAI/C,MAAM,CAACsC,KAAP,IAAgB,oBAApB,EAA0C;AAC7CpE,MAAAA,OAAO,CAAC4E,IAAR,CAAa,iBAAb;AACH,KAFM,MAEA;AACH,UAAI9C,MAAM,CAACuC,SAAP,IAAoB,CAAxB,EAA2B;AACvBrE,QAAAA,OAAO,CAACuE,IAAR,CAAa,kBAAkBzC,MAAM,CAACuC,SAAtC;AACH,OAFD,MAEO;AACHrE,QAAAA,OAAO,CAACuC,KAAR,CAAc,mBAAmBT,MAAM,CAACuC,SAAxC;AACH,OALE,CAMH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AACJ,GAzBD;AA0BAtF,EAAAA,EAAE,CAACmF,EAAH,CAAM,mBAAN,EAA2B,UAAApC,MAAM,EAAI;AACjC9B,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC6B,MAAM,CAAC+C,QAAxC,EAAkD/C,MAAM,CAACsC,KAAzD;;AACA,QAAItC,MAAM,CAACsC,KAAP,IAAgB,SAApB,EAA+B;AAC3BpE,MAAAA,OAAO,CAAC4E,IAAR,CAAa,oBAAoB9C,MAAM,CAAC+C,QAAxC;;AACA,UAAM3E,QAAO,GAAG1B,UAAU,EAA1B;;AACAwB,MAAAA,OAAO,CAACuE,IAAR,CAAa,SAAb,EAAwBrE,QAAxB;;AACA,UAAIA,QAAO,KAAK,QAAhB,EAA0B;AACtB,YAAM4E,MAAM,GAAGlF,CAAC,CAAC,oBAAD,CAAhB;;AACA,aAAK,IAAImF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCD,UAAAA,MAAM,CAACC,CAAD,CAAN,CAAUE,SAAV,GAAsBH,MAAM,CAACC,CAAD,CAAN,CAAUE,SAAhC;AACH;AACJ;AACJ,KAVD,MAUO,IAAInD,MAAM,CAACsC,KAAP,IAAgB,iBAApB,EAAuC;AAC1CpE,MAAAA,OAAO,CAAC4E,IAAR,CAAa,cAAb;AACH,KAFM,MAEA;AACH,UAAI9C,MAAM,CAACuC,SAAP,IAAoB,CAAxB,EAA2B;AACvBrE,QAAAA,OAAO,CAACuE,IAAR,CAAa,eAAezC,MAAM,CAACuC,SAAnC;AACH,OAFD,MAEO;AACHrE,QAAAA,OAAO,CAACuC,KAAR,CAAc,gBAAgBT,MAAM,CAACuC,SAArC;AACH,OALE,CAOH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AACJ,GAlCD;AAmCAtF,EAAAA,EAAE,CAACmF,EAAH,CAAM,uBAAN,EAA+B,UAACC,MAAD,EAASe,UAAT,EAAwB;AACnDlF,IAAAA,OAAO,CAACuE,IAAR,uCAA4CJ,MAA5C,UAAyDO,IAAI,CAACC,SAAL,CAAeO,UAAf,CAAzD;AACH,GAFD;AAGAnG,EAAAA,EAAE,CAACmF,EAAH,CAAM,kBAAN;AAAA,uEAA0B,iBAAOC,MAAP,EAAeK,UAAf,EAA2BU,UAA3B,EAAuCZ,YAAvC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBtE,cAAAA,OAAO,CAACuE,IAAR,CAAa,4BAAb,EAA2CJ,MAA3C,EAAmDe,UAAnD,EAA+DZ,YAA/D,EADsB,CAEtB;;AAFsB,oBAGlBE,UAAU,IAAI,KAHI;AAAA;AAAA;AAAA;;AAAA,qCAITO,CAJS;AAKd/E,gBAAAA,OAAO,CAAC4E,IAAR,CAAaM,UAAU,CAACH,CAAD,CAAV,CAAcF,QAAd,GAAyB,YAAtC;AACA,oBAAIM,YAAY,SAAhB;AACA,oBAAIC,UAAU,GAAG,EAAjB;AAEA,oBAAGxF,CAAC,CAAC,aAAD,CAAD,CAAiByF,GAAjB,EAAH,EAA2BD,UAAU,CAACrD,UAAX,GAAwBnC,CAAC,CAAC,aAAD,CAAD,CAAiByF,GAAjB,EAAxB;AAC3B,oBAAG3F,EAAE,IAAI,IAAT,EAAe0F,UAAU,CAACE,YAAX,GAA0B,CAA1B;AAEfvG,gBAAAA,EAAE,CAACwG,kBAAH,CAAsBL,UAAU,CAACH,CAAD,CAAV,CAAcF,QAApC,EAA6CO,UAA7C,EAAyDI,IAAzD,CAA8D,UAAAC,MAAM,EAAI;AACpEN,kBAAAA,YAAY,GAAGM,MAAf;AACArG,kBAAAA,kBAAkB,CAACyE,IAAnB,CAAwBqB,UAAU,CAACH,CAAD,CAAlC;AACA,sBAAIW,SAAS,GAAG9F,CAAC,qBAAcsF,UAAU,CAACH,CAAD,CAAV,CAAcF,QAA5B,mDAAjB,CAHoE,CAIpE;;AACAjF,kBAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB+F,MAAlB,CAAyBD,SAAzB;AACA,sBAAME,KAAK,GAAGhG,CAAC,CAAC,yBAAD,CAAD,CAA6B,CAA7B,CAAd;AACAI,kBAAAA,OAAO,CAACuE,IAAR,CAAa,OAAb,EAAsBqB,KAAtB,EAA6BT,YAA7B;AACAS,kBAAAA,KAAK,CAACX,SAAN,GAAkBE,YAAlB;AACAS,kBAAAA,KAAK,CAACC,KAAN,GAAc,KAAd,CAToE,CAUpE;AACH,iBAXD,WAWS,UAAAC,GAAG,EAAI;AACZ9F,kBAAAA,OAAO,CAACuC,KAAR,CAAc,KAAd,EAAqBuD,GAArB;AACH,iBAbD;AAZc;;AAIlB,mBAASf,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGG,UAAU,CAACF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAAA,sBAAnCA,CAAmC;AAuB3C,eA3BiB,CA4BlB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA7CkB;AAAA;;AAAA;AAAA,oBA8CXP,UAAU,IAAI,QA9CH;AAAA;AAAA;AAAA;;AA+CTuB,cAAAA,CA/CS,GA+CL,CA/CK;;AAAA;AAAA,oBA+CFA,CAAC,GAAG3G,kBAAkB,CAAC4F,MA/CrB;AAAA;AAAA;AAAA;;AAgDLgB,cAAAA,CAhDK,GAgDD,CAhDC;;AAAA;AAAA,oBAgDEA,CAAC,GAAGd,UAAU,CAACF,MAhDjB;AAAA;AAAA;AAAA;;AAAA,oBAiDN5F,kBAAkB,CAAC2G,CAAD,CAAlB,CAAsBlB,QAAtB,KAAmCK,UAAU,CAACc,CAAD,CAAV,CAAcnB,QAjD3C;AAAA;AAAA;AAAA;;AAkDN,kBAAI;AACA9F,gBAAAA,EAAE,CAACkH,iBAAH,CAAqB7G,kBAAkB,CAAC2G,CAAD,CAAlB,CAAsBlB,QAA3C;AACH,eAFD,CAEE,OAAOtC,KAAP,EAAc;AACZvC,gBAAAA,OAAO,CAACuC,KAAR,CAAcA,KAAd;AACH;;AAEDvC,cAAAA,OAAO,CAAC4E,IAAR,CAAaxF,kBAAkB,CAAC2G,CAAD,CAAlB,CAAsBlB,QAAtB,GAAiC,aAA9C;AAGAjF,cAAAA,CAAC,CAAC,2BAA2BmG,CAA3B,GAA+B,GAAhC,CAAD,CAAsCG,MAAtC;AACA9G,cAAAA,kBAAkB,CAAC+G,MAAnB,CAA0BJ,CAAC,EAA3B,EAA+B,CAA/B;AA5DM;;AAAA;AAgDyBC,cAAAA,CAAC,EAhD1B;AAAA;AAAA;;AAAA;AA+C6BD,cAAAA,CAAC,EA/C9B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B;;AAAA;AAAA;AAAA;AAAA;AAoEAhH,EAAAA,EAAE,CAACmF,EAAH,CAAM,mBAAN;AAAA,wEAA2B,kBAAOW,QAAP,EAAiBuB,aAAjB;AAAA;AAAA;AAAA;AAAA;AACvBpG,cAAAA,OAAO,CAACC,GAAR,gBACY4E,QADZ,wBACkCuB,aAAa,CAACR,KAAd,CAAoBS,QADtD,4BACgFD,aAAa,CAACR,KAAd,CAAoBU,YADpG,4BACkIF,aAAa,CAACG,KAAd,CAAoBC,YADtJ,wBACgLJ,aAAa,CAACG,KAAd,CAAoBE,QADpM;AAGAzG,cAAAA,OAAO,CAACC,GAAR,gBAAoB4E,QAApB,GAAgCuB,aAAhC;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AAAA;AAAA;AAAA;AAAA;AAOArH,EAAAA,EAAE,CAACmF,EAAH,CAAM,sBAAN;AAAA,wEAA8B,kBAAOW,QAAP,EAAiBuB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAC1BpG,cAAAA,OAAO,CAACC,GAAR,mBACe4E,QADf,wBACqCuB,aAAa,CAACR,KAAd,CAAoBS,QADzD,4BACmFD,aAAa,CAACR,KAAd,CAAoBU,YADvG,4BACqIF,aAAa,CAACG,KAAd,CAAoBC,YADzJ,wBACmLJ,aAAa,CAACG,KAAd,CAAoBE,QADvM;AAGAzG,cAAAA,OAAO,CAACC,GAAR,mBAAuB4E,QAAvB,GAAmCuB,aAAnC;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;;AAAA;AAAA;AAAA;AAAA;AAOArH,EAAAA,EAAE,CAACmF,EAAH,CAAM,0BAAN,EAAkC,UAACW,QAAD,EAAW6B,MAAX,EAAsB;AACpD1G,IAAAA,OAAO,CAACuE,IAAR,oCAAyCM,QAAzC,4BAAmE6B,MAAM,IAAI,MAAV,GAAmB,MAAnB,GAA4B,OAA/F;AACH,GAFD;AAIA3H,EAAAA,EAAE,CAACmF,EAAH,CAAM,uBAAN,EAA+B,UAACW,QAAD,EAAW6B,MAAX,EAAsB;AACjD1G,IAAAA,OAAO,CAACuE,IAAR,iCAAsCM,QAAtC,2BAA+D6B,MAAM,IAAI,MAAV,GAAmB,MAAnB,GAA4B,OAA3F;AACH,GAFD;AAIA3H,EAAAA,EAAE,CAACmF,EAAH,CAAM,kBAAN,EAA0B,UAACgB,UAAD,EAAgB;AACtCA,IAAAA,UAAU,CAACyB,OAAX,CAAmB,UAAAlB,MAAM,EAAI;AACzBA,MAAAA,MAAM,CAACmB,IAAP,IAAe,MAAf,IAAyBhH,CAAC,CAAC,aAAD,CAAD,CAAiBoE,IAAjB,CAAsB6C,IAAI,CAACC,KAAL,CAAWrB,MAAM,CAACsB,UAAlB,IAAgC,EAAtD,CAAzB;AACA/G,MAAAA,OAAO,CAACuE,IAAR,WAAgBkB,MAAM,CAACmB,IAAvB,cAA+BnB,MAAM,CAACZ,QAAtC,2BAA+DY,MAAM,CAACsB,UAAtE;AACH,KAHD;AAIH,GALD;AAMAhI,EAAAA,EAAE,CAACmF,EAAH,CAAM,aAAN,EAAqB,UAACG,SAAD,EAAYT,UAAZ,EAA2B;AAC5C5D,IAAAA,OAAO,CAACuE,IAAR,gBAA4BF,SAA5B,EAAuCT,UAAvC;AACH,GAFD;AAGA7E,EAAAA,EAAE,CAACmF,EAAH,CAAM,yBAAN,EAAiC,UAACM,UAAD,EAAawC,MAAb,EAAwB;AACrDhH,IAAAA,OAAO,CAACuE,IAAR,4BAAwCyC,MAAxC,EAAgDxC,UAAhD;AACH,GAFD;AAGAzF,EAAAA,EAAE,CAACmF,EAAH,CAAM,yBAAN,EAAiC,UAACM,UAAD,EAAayC,UAAb,EAAyBD,MAAzB,EAAoC;AACjEhH,IAAAA,OAAO,CAACuE,IAAR,4BAAwCyC,MAAxC,EAAgDxC,UAAhD,EAA4DyC,UAA5D;AACH,GAFD;AAGAlI,EAAAA,EAAE,CAACmF,EAAH,CAAM,2BAAN,EAAmC,UAACC,MAAD,EAAS+C,KAAT,EAAmB;AAClDlH,IAAAA,OAAO,CAACuE,IAAR,qCAA0CJ,MAA1C,cAAoD+C,KAApD;AACH,GAFD;AAGH;;SAEcC,K;;;;;mEAAf,mBAAqBC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACA;AACIC,YAAAA,KAHR,GAGgB,EAHhB,EAII;AACA;;AALJ,iBAMQnI,QANR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOsBU,CAAC,CAACC,GAAF,CAAMjB,QAAN,EAAgB;AAC1B0I,cAAAA,MAAM,EAAEtI,KADkB;AAE1BuI,cAAAA,OAAO,EAAE1I,MAFiB;AAG1B2I,cAAAA,SAAS,EAAEtI;AAHe,aAAhB,CAPtB;;AAAA;AAOQmI,YAAAA,KAPR;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAesBzH,CAAC,CAACC,GAAF,CAAM,6CAAN,EAAqD;AAC/DyH,cAAAA,MAAM,EAAEtI,KADuD;AAE/DuI,cAAAA,OAAO,EAAE1I;AAFsD,aAArD,CAftB;;AAAA;AAeQwI,YAAAA,KAfR;;AAAA;AAAA;AAAA,mBAoBUtI,EAAE,CAACQ,SAAH,CAAa6H,MAAb,EAAqBC,KAArB,EAA4B;AAAExI,cAAAA,MAAM,EAANA,MAAF;AAAUJ,cAAAA,QAAQ,EAARA;AAAV,aAA5B,EAAkD;AAAEgJ,cAAAA,UAAU,EAAE;AAAd,aAAlD,CApBV;;AAAA;AAqBI9H,YAAAA,QAAQ,CAACkE,IAAT,CAAcuD,MAAd;AArBJ,+CAuBW,IAvBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0BenE,S;;;;;uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACMmE,YAAAA,MAFV,GAEkB,KAFlB;;AAAA,gBAGSA,MAHT;AAAA;AAAA;AAAA;;AAIQhF,YAAAA,KAAK,CAAC,iBAAD,CAAL;AAJR,+CAKe,KALf;;AAAA;AAAA;AAAA,mBAYU+E,KAAK,CAACC,MAAD,CAZf;;AAAA;AAaI7H,YAAAA,SAAS,GAAG,IAAZ,CAbJ,CAeI;AACA;;AAhBJ,+CAkBW,IAlBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqBe4D,M;;;;;oEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACInD,YAAAA,OAAO,CAAC4E,IAAR,CAAa,8BAAb;AACMwC,YAAAA,MAFV,GAEmBxH,CAAC,CAAC,SAAD,CAAD,CAAayF,GAAb,EAFnB,EAGI;AACA;;AACA,iBAASN,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG3F,kBAAkB,CAAC4F,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD3F,cAAAA,kBAAkB,CAAC2F,CAAD,CAAlB,CAAsBF,QAAtB,IAAkC9F,EAAE,CAACkH,iBAAH,CAAqB7G,kBAAkB,CAAC2F,CAAD,CAAlB,CAAsBF,QAA3C,CAAlC;AACH,aAPL,CASI;AACA;;;AACAzF,YAAAA,kBAAkB,GAAG,EAArB,CAXJ,CAYI;;AAEAO,YAAAA,QAAQ,CAACwG,MAAT,CAAgBxG,QAAQ,CAAC+H,SAAT,CAAmB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,IAAIP,MAAZ;AAAA,aAAvB,CAAhB,EAA4D,CAA5D;;AAEA,gBAAIjI,YAAY,CAAC8F,SAAb,IAA0B5F,WAA1B,KAA0C,CAAC+H,MAAD,IAAWzH,QAAQ,CAACqF,MAAT,IAAmB,CAAxE,CAAJ,EAAiF;AAC/E7F,cAAAA,YAAY,CAAC8F,SAAb,GAAyB,IAAzB;AACAlG,cAAAA,EAAE,CAAC6I,oBAAH,CAAwB9I,eAAxB;AACAC,cAAAA,EAAE,CAAC8I,aAAH,CAAiBrI,WAAjB;AACAH,cAAAA,WAAW,GAAG,KAAd;AACA,eAACO,CAAC,CAAC,QAAD,CAAD,CAAYkI,QAAZ,CAAqB,QAArB,CAAD,IAAmClI,CAAC,CAAC,QAAD,CAAD,CAAYmI,QAAZ,CAAqB,QAArB,CAAnC;AACD;;AAED,gBAAI,CAACX,MAAD,IAAWzH,QAAQ,CAACqF,MAAT,IAAmB,CAAlC,EAAqC;AACnCpF,cAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBoE,IAAlB,CAAuB,EAAvB;AACApE,cAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBoE,IAAjB,CAAsB,EAAtB;AACD,aA3BL,CA6BI;AACA;;;AACAjF,YAAAA,EAAE,CAACiJ,UAAH,CAAcZ,MAAd;AACA7H,YAAAA,SAAS,GAAG,KAAZ;;AAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmCe2D,O;;;;;qEAAf,mBAAuB+E,WAAvB,EAAoCC,KAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIlI,YAAAA,OAAO,CAACuE,IAAR,CAAa,cAAb,EAA6B3E,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EAA7B,EAAoDzF,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EAApD;AACArF,YAAAA,OAAO,CAACuE,IAAR,CAAa,aAAb,EAA4B0D,WAA5B;AACMrC,YAAAA,KAHV,GAIQqC,WAAW,IAAIA,WAAW,CAACE,MAA3B,IAAqC,OAAOF,WAAW,CAACE,MAAZ,CAAmBvC,KAA1B,KAAoC,SAAzE,GACMqC,WAAW,CAACE,MAAZ,CAAmBvC,KADzB,GAEMwC,SANd;AAQUC,YAAAA,YARV,GAQyB;AACjBF,cAAAA,MAAM,EAAE;AACJG,gBAAAA,UAAU,EAAE1I,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EADR;AAEJkD,gBAAAA,UAAU,EAAE3I,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EAFR;AAGJO,gBAAAA,KAAK,EAAEA,KAAK,KAAKwC,SAAV,GAAsBxC,KAAtB,GAA8BhG,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,OAA0B,GAA1B,GAAgC,KAAhC,GAAwC,IAHzE;AAIJkB,gBAAAA,KAAK,EAAE3G,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,OAA0B,GAA1B,GAAgC,KAAhC,GAAwC,IAJ3C,CAKJ;;AALI;AADS,aARzB;AAiBI4C,YAAAA,WAAW,IAAIA,WAAW,CAACE,MAA3B,IAAqCK,MAAM,CAACC,MAAP,CAAcJ,YAAY,CAACF,MAA3B,EAAmCF,WAAW,CAACE,MAA/C,CAArC;AACA,aAACE,YAAY,CAACF,MAAb,CAAoBvC,KAArB,KAA+BzG,YAAY,CAACuJ,QAAb,GAAwB,KAAvD;AACMC,YAAAA,QAnBV,GAoBQN,YAAY,CAACF,MAAb,CAAoB5B,KAApB,KAA8B,KAA9B,GAAsC,OAAtC,GAAgD8B,YAAY,CAACF,MAAb,CAAoBvC,KAApB,KAA8B,KAA9B,GAAsC,OAAtC,GAAgD,KApBxG;AAqBInG,YAAAA,WAAW,GAAGkJ,QAAd,CArBJ,CAsBI;;AACA9E,YAAAA,IAAI,CAACwE,YAAD,EAAe;AAAEO,cAAAA,SAAS,EAAElE,IAAI,CAACC,SAAL,CAAe;AAAEgE,gBAAAA,QAAQ,EAARA;AAAF,eAAf;AAAb,aAAf,EAA4DT,KAA5D,CAAJ;;AAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyBerE,I;;;;;kEAAf,mBAAoBoE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiCY,YAAAA,aAAjC,iEAAiD,EAAjD;AAAqDX,YAAAA,KAArD;AAAA;;AAEQ,gBAAG1I,WAAH,EAAgB;AACZT,cAAAA,EAAE,CAAC8I,aAAH,CAAiBrI,WAAjB;AACH;;AAJT;AAAA,mBAK4BT,EAAE,CAAC+J,YAAH,CAAgBb,WAAhB,CAL5B;;AAAA;AAKQzI,YAAAA,WALR;AAMQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,YAAAA,YAAY,CAAC8F,SAAb,GAAyBzF,WAAzB;AACAH,YAAAA,WAAW,GAAG,IAAd;AACAO,YAAAA,CAAC,CAAC,QAAD,CAAD,CAAYkI,QAAZ,CAAqB,QAArB,KAAkClI,CAAC,CAAC,QAAD,CAAD,CAAYmJ,WAAZ,CAAwB,QAAxB,CAAlC;AACAb,YAAAA,KAAK,KAAKpJ,eAAe,GAAG,WAAW,IAAIJ,IAAJ,GAAWC,OAAX,EAAlC,CAAL;AACA,gBAAGiB,CAAC,CAAC,aAAD,CAAD,CAAiByF,GAAjB,EAAH,EAA2BwD,aAAa,CAAC9G,UAAd,GAA2BnC,CAAC,CAAC,aAAD,CAAD,CAAiByF,GAAjB,EAA3B;AAC3B,gBAAIzF,CAAC,CAAC,SAAD,CAAD,CAAayF,GAAb,EAAJ,EAAwBwD,aAAa,CAAC1E,MAAd,GAAuBvE,CAAC,CAAC,SAAD,CAAD,CAAayF,GAAb,EAAvB;AAClBvD,YAAAA,MAxBd,GAwBuB/C,EAAE,CAACiK,qBAAH,CAAyBlK,eAAzB,EAA0CU,WAA1C,EAAuDqJ,aAAvD,CAxBvB;AAyBQ7I,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBnB,eAA/B,EAAgDgD,MAAhD;AAzBR;AAAA;;AAAA;AAAA;AAAA;;AA2BQ,gBAAI,cAAImH,IAAR,EAAc;AACVjJ,cAAAA,OAAO,CAACuC,KAAR,CAAc,cAAd,EAA8B,cAAI0G,IAAlC,EAAwC,cAAIC,OAA5C;AACH,aAFD,MAEO;AACHlJ,cAAAA,OAAO,CAACuC,KAAR,CAAc,oBAAd;AACH;;AA/BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmCA3C,CAAC,CAAC,eAAD,CAAD,CAAmBmD,KAAnB,CAAyB,YAAY;AACjChE,EAAAA,EAAE,CAACoK,sBAAH,CAA0BhK,YAAY,CAAC8F,SAAvC,EAAkD,CAACrF,CAAC,CAAC,IAAD,CAAD,CAAQkI,QAAR,CAAiB,UAAjB,CAAnD;AACAlI,EAAAA,CAAC,CAAC,IAAD,CAAD,CAAQwJ,WAAR,CAAoB,UAApB;AACH,CAHD;AAKAxJ,CAAC,CAAC,gBAAD,CAAD,CAAoBmD,KAApB,CAA0B,YAAY;AAClChE,EAAAA,EAAE,CAACsK,sBAAH,CAA0BlK,YAAY,CAAC8F,SAAvC,EAAkD,CAACrF,CAAC,CAAC,IAAD,CAAD,CAAQkI,QAAR,CAAiB,UAAjB,CAAnD;AACAlI,EAAAA,CAAC,CAAC,IAAD,CAAD,CAAQwJ,WAAR,CAAoB,UAApB;AACH,CAHD;AAKAxJ,CAAC,CAAC,YAAD,CAAD,CAAgBmD,KAAhB,uEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,QADgB,GACL,KADK;AAAA;AAAA;AAAA,iBAGCC,SAAS,EAHV;;AAAA;AAGhBD,UAAAA,QAHgB;;AAAA,eAIZA,QAJY;AAAA;AAAA;AAAA;;AAKZ,cAAGxD,WAAH,EAAgB;AACZT,YAAAA,EAAE,CAAC8I,aAAH,CAAiBrI,WAAjB;AACH;;AAPW;AAAA,iBAQQT,EAAE,CAAC+J,YAAH,CAAgB;AAChCX,YAAAA,MAAM,EAAE;AACJG,cAAAA,UAAU,EAAE1I,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EADR;AAEJkD,cAAAA,UAAU,EAAE3I,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,EAFR;AAGJO,cAAAA,KAAK,EAAEhG,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,OAA0B,GAA1B,GAAgC,KAAhC,GAAwC,IAH3C;AAIJkB,cAAAA,KAAK,EAAE3G,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,OAA0B,GAA1B,GAAgC,KAAhC,GAAwC;AAJ3C;AADwB,WAAhB,CARR;;AAAA;AAQZ7F,UAAAA,WARY;AAgBZL,UAAAA,YAAY,CAAC8F,SAAb,GAAyBzF,WAAzB;AACAH,UAAAA,WAAW,GAAG,IAAd;AACAO,UAAAA,CAAC,CAAC,YAAD,CAAD,CAAgByF,GAAhB,OAA0B,GAA1B,KAAkClG,YAAY,CAACuJ,QAAb,GAAwB,IAA1D;;AAlBY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBhB1I,UAAAA,OAAO,CAACuC,KAAR;;AArBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAyBA,SACIxD,EADJ,EAEIC,KAFJ,EAGIF,eAHJ,EAII6C,UAJJ,EAKIrC,oBALJ,EAMIT,MANJ,EAOIO,kBAPJ,EAQI+D,MARJ,EASIF,SATJ,EAUIY,IAVJ,EAWIX,OAXJ,EAYI/D,YAZJ,EAaIE,WAbJ,EAcIE,SAdJ,EAeIE,WAfJ,EAgBIC,EAhBJ,G,CAmBA;AACA;AACA","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport VConsole from 'vconsole';\nimport './assets/bootstrap.min';\nimport './assets/bootstrap.min.css';\nimport { ZegoExpressEngine } from 'zego-express-engine-webrtc';\nimport { getCgi } from './content';\nimport { getBrowser } from './assets/utils';\n\nnew VConsole();\nconst userName = 'sampleUser' + new Date().getTime();\nconst tokenUrl = 'https://wsliveroom-alpha.zego.im:8282/token';\nlet userID = 'sample' + new Date().getTime();\nlet publishStreamId = 'webrtc' + new Date().getTime();\nlet zg;\nlet appID = 1610159475; // 请从官网控制台获取对应的appID\nlet server = 'wss://webliveroom-test.zego.im/ws'; // 请从官网控制台获取对应的server地址，否则可能登录失败\n\nlet cgiToken = '';\n//const appSign = '';\nlet previewVideo;\nlet useLocalStreamList = [];\nlet isPreviewed = false;\nlet supportScreenSharing = false;\nlet loginRoom = false;\n\nlet localStream;\nlet publishType;\n\nlet l3;\nlet roomList = [];\n\n// 测试用代码，开发者请忽略\n// Test code, developers please ignore\n\n({ appID, server, cgiToken, userID, l3 } = getCgi(appID, server, cgiToken));\nif (userID == \"\") userID = 'sample' + new Date().getTime();\n\nif (cgiToken && tokenUrl == 'https://wsliveroom-alpha.zego.im:8282/token') {\n    $.get(cgiToken, rsp => {\n        cgiToken = rsp.data;\n        console.log(cgiToken);\n    });\n}\n\n// 测试用代码 end\n// Test code end\n\nlet browser = {\n    versions:function(){\n        var u = navigator.userAgent, app = navigator.appVersion;\n        return {\n            trident: u.indexOf('Trident') > -1, //IE内核\n            presto: u.indexOf('Presto') > -1, //opera内核\n            webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核\n            gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1,//火狐内核\n            mobile: !!u.match(/AppleWebKit.*Mobile.*/), //是否为移动终端\n            ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n            android: u.indexOf('Android') > -1 || u.indexOf('Adr') > -1, //android终端\n            iPhone: u.indexOf('iPhone') > -1 , //是否为iPhone或者QQHD浏览器\n            iPad: u.indexOf('iPad') > -1, //是否iPad\n            webApp: u.indexOf('Safari') == -1, //是否web应用程序，没有头部与底部\n            weixin: u.indexOf('MicroMessenger') > -1, //是否微信 （2015-01-22新增）\n            qq: u.match(/\\sQQ/i) == \" qq\" //是否QQ\n        };\n    }(),\n    language:(navigator.browserLanguage || navigator.language).toLowerCase()\n}\n\n// eslint-disable-next-line prefer-const\nzg = new ZegoExpressEngine(appID, server);\n\nwindow.zg = zg;\nwindow.useLocalStreamList = useLocalStreamList;\n\nasync function checkAnRun(checkScreen) {\n    // console.log('sdk version is', zg.getVersion());\n    try {\n        const result = await zg.checkSystemRequirements();\n\n        // console.warn('checkSystemRequirements ', result);\n        !result.videoCodec.H264 && $('#videoCodeType option:eq(1)').attr('disabled', 'disabled');\n        !result.videoCodec.VP8 && $('#videoCodeType option:eq(2)').attr('disabled', 'disabled');\n\n        if (!result.webRTC) {\n            alert('browser is not support webrtc!!');\n            return false;\n        } else if (!result.videoCodec.H264 && !result.videoCodec.VP8) {\n            alert('browser is not support H264 and VP8');\n            return false;\n        } else if (result.videoCodec.H264) {\n            supportScreenSharing = result.screenSharing;\n            if (checkScreen && !supportScreenSharing) alert('browser is not support screenSharing');\n            previewVideo = $('#previewVideo')[0];\n            start();\n        } else {\n            alert('不支持H264，请前往混流转码测试');\n        }\n\n        return true;\n    } catch (err) {\n        console.error('checkSystemRequirements', err);\n        return false;\n    }\n\n\n}\n\nasync function start() {\n    initSDK();\n\n    zg.setLogConfig({\n        logLevel: 'debug',\n        remoteLogLevel: 'info',\n        logURL: '',\n    });\n\n    zg.setDebugVerbose(false);\n    zg.setSoundLevelDelegate(true, 3000);\n\n    $('#createRoom').click(async () => {\n        let loginSuc = false;\n        try {\n            loginSuc = await enterRoom();\n            loginSuc && (await publish());\n            \n\n        } catch (error) {\n            console.error(error);\n        }\n    });\n\n    $('#openRoom').click(async () => {\n        await enterRoom();\n    });\n\n    $('#leaveRoom').click(function () {\n        logout();\n    });\n\n    $('#stopPlaySound').click(() => {\n        zg.setSoundLevelDelegate(false);\n    });\n\n    $('#resumePlaySound').click(() => {\n        zg.setSoundLevelDelegate(false);\n        zg.setSoundLevelDelegate(true);\n    });\n}\n\nasync function enumDevices() {\n    const audioInputList = [],\n        videoInputList = [];\n    const deviceInfo = await zg.enumDevices();\n\n    deviceInfo &&\n        deviceInfo.microphones.map((item, index) => {\n            if (!item.deviceName) {\n                item.deviceName = 'microphone' + index;\n            }\n            audioInputList.push(' <option value=\"' + item.deviceID + '\">' + item.deviceName + '</option>');\n            // console.log('microphone: ' + item.deviceName);\n            return item;\n        });\n\n    deviceInfo &&\n        deviceInfo.cameras.map((item, index) => {\n            if (!item.deviceName) {\n                item.deviceName = 'camera' + index;\n            }\n            videoInputList.push(' <option value=\"' + item.deviceID + '\">' + item.deviceName + '</option>');\n            console.log('camera: ' + item.deviceName);\n            return item;\n        });\n\n    audioInputList.push('<option value=\"0\">禁止</option>');\n    videoInputList.push('<option value=\"0\">禁止</option>');\n\n    $('#audioList').html(audioInputList.join(''));\n    $('#videoList').html(videoInputList.join(''));\n}\n\nfunction initSDK() {\n    enumDevices();\n\n    zg.on('roomStateUpdate', (roomID, state, errorCode, extendedData) => {\n        console.warn('roomStateUpdate: ', roomID, state, errorCode, extendedData);\n    });\n    zg.on('roomUserUpdate', (roomID, updateType, userList) => {\n        console.warn(\n            `roomUserUpdate: room ${roomID}, user ${updateType === 'ADD' ? 'added' : 'left'} `,\n            JSON.stringify(userList),\n        );\n    });\n    zg.on('publisherStateUpdate', result => {\n        // console.log('publisherStateUpdate: ', result.streamID, result.state);\n        if (result.state == 'PUBLISHING') {\n            console.info(' publish  success ' + result.streamID);\n        } else if (result.state == 'PUBLISH_REQUESTING') {\n            console.info(' publish  retry');\n        } else {\n            if (result.errorCode == 0) {\n                console.warn('publish stop ' + result.errorCode);\n            } else {\n                console.error('publish error ' + result.errorCode);\n            }\n            // const _msg = stateInfo.error.msg;\n            // if (stateInfo.error.msg.indexOf ('server session closed, reason: ') > -1) {\n            //         const code = stateInfo.error.msg.replace ('server session closed, reason: ', '');\n            //         if (code === '21') {\n            //                 _msg = '音频编解码不支持(opus)';\n            //         } else if (code === '22') {\n            //                 _msg = '视频编解码不支持(H264)'\n            //         } else if (code === '20') {\n            //                 _msg = 'sdp 解释错误';\n            //         }\n            // }\n            // alert('推流失败,reason = ' + _msg);\n        }\n    });\n    zg.on('playerStateUpdate', result => {\n        console.log('playerStateUpdate', result.streamID, result.state);\n        if (result.state == 'PLAYING') {\n            console.info(' play  success ' + result.streamID);\n            const browser = getBrowser();\n            console.warn('browser', browser);\n            if (browser === 'Safari') {\n                const videos = $('.remoteVideo video');\n                for (let i = 0; i < videos.length; i++) {\n                    videos[i].srcObject = videos[i].srcObject;\n                }\n            }\n        } else if (result.state == 'PLAY_REQUESTING') {\n            console.info(' play  retry');\n        } else {\n            if (result.errorCode == 0) {\n                console.warn('play stop ' + result.errorCode);\n            } else {\n                console.error('play error ' + result.errorCode);\n            }\n\n            // const _msg = stateInfo.error.msg;\n            // if (stateInfo.error.msg.indexOf ('server session closed, reason: ') > -1) {\n            //         const code = stateInfo.error.msg.replace ('server session closed, reason: ', '');\n            //         if (code === '21') {\n            //                 _msg = '音频编解码不支持(opus)';\n            //         } else if (code === '22') {\n            //                 _msg = '视频编解码不支持(H264)'\n            //         } else if (code === '20') {\n            //                 _msg = 'sdp 解释错误';\n            //         }\n            // }\n            // alert('拉流失败,reason = ' + _msg);\n        }\n    });\n    zg.on('streamExtraInfoUpdate', (roomID, streamList) => {\n        console.warn(`streamExtraInfoUpdate: room ${roomID},  `, JSON.stringify(streamList));\n    });\n    zg.on('roomStreamUpdate', async (roomID, updateType, streamList, extendedData) => {\n        console.warn('roomStreamUpdate 1 roomID ', roomID, streamList, extendedData);\n        // let queue = []\n        if (updateType == 'ADD') {\n            for (let i = 0; i < streamList.length; i++) {\n                console.info(streamList[i].streamID + ' was added');\n                let remoteStream;\n                let playOption = {};\n\n                if($(\"#videoCodec\").val()) playOption.videoCodec = $(\"#videoCodec\").val();\n                if(l3 == true) playOption.resourceMode = 2;\n\n                zg.startPlayingStream(streamList[i].streamID,playOption).then(stream => {\n                    remoteStream = stream;\n                    useLocalStreamList.push(streamList[i]);\n                    let videoTemp = $(`<video id=${streamList[i].streamID} autoplay muted playsinline controls></video>`)\n                    //queue.push(videoTemp)\n                    $('.remoteVideo').append(videoTemp);\n                    const video = $('.remoteVideo video:last')[0];\n                    console.warn('video', video, remoteStream);\n                    video.srcObject = remoteStream;\n                    video.muted = false;\n                    // videoTemp = null;\n                }).catch(err => {\n                    console.error('err', err);\n                });\n\n            }\n            // const inIphone = browser.versions.mobile && browser.versions.ios\n            // const inSafari = browser.versions.webApp\n            // const inWx = browser.versions.weixin\n            // if(streamList.length > 1 && (inIphone || inSafari || inWx)) {\n            //     const ac = zc.zegoWebRTC.ac;\n            //     ac.resume();\n            //     const gain = ac.createGain();\n\n            //     while(queue.length) {\n            //         let temp = queue.shift()\n            //         if(temp.srcObject) {\n            //             queue.push(ac.createMediaStreamSource(temp.srcObject))\n            //         } else {\n            //             temp.connect(gain)\n            //         }\n            //     }\n            //     gain.connect(ac.destination);\n            // }\n        } else if (updateType == 'DELETE') {\n            for (let k = 0; k < useLocalStreamList.length; k++) {\n                for (let j = 0; j < streamList.length; j++) {\n                    if (useLocalStreamList[k].streamID === streamList[j].streamID) {\n                        try {\n                            zg.stopPlayingStream(useLocalStreamList[k].streamID);\n                        } catch (error) {\n                            console.error(error);\n                        }\n\n                        console.info(useLocalStreamList[k].streamID + 'was devared');\n\n\n                        $('.remoteVideo video:eq(' + k + ')').remove();\n                        useLocalStreamList.splice(k--, 1);\n                        break;\n                    }\n                }\n            }\n        }\n    });\n\n    zg.on('playQualityUpdate', async (streamID, streamQuality) => {\n        console.log(\n            `play#${streamID} videoFPS: ${streamQuality.video.videoFPS} videoBitrate: ${streamQuality.video.videoBitrate} audioBitrate: ${streamQuality.audio.audioBitrate} audioFPS: ${streamQuality.audio.audioFPS}`,\n        );\n        console.log(`play#${streamID}`, streamQuality);\n    });\n\n    zg.on('publishQualityUpdate', async (streamID, streamQuality) => {\n        console.log(\n            `publish#${streamID} videoFPS: ${streamQuality.video.videoFPS} videoBitrate: ${streamQuality.video.videoBitrate} audioBitrate: ${streamQuality.audio.audioBitrate} audioFPS: ${streamQuality.audio.audioFPS}`,\n        );\n        console.log(`publish#${streamID}`, streamQuality);\n    });\n\n    zg.on('remoteCameraStatusUpdate', (streamID, status) => {\n        console.warn(`remoteCameraStatusUpdate ${streamID} camera status ${status == 'OPEN' ? 'open' : 'close'}`);\n    });\n\n    zg.on('remoteMicStatusUpdate', (streamID, status) => {\n        console.warn(`remoteMicStatusUpdate ${streamID} micro status ${status == 'OPEN' ? 'open' : 'close'}`);\n    });\n\n    zg.on('soundLevelUpdate', (streamList) => {\n        streamList.forEach(stream => {\n            stream.type == 'push' && $('#soundLevel').html(Math.round(stream.soundLevel) + '');\n            console.warn(`${stream.type} ${stream.streamID}, soundLevel: ${stream.soundLevel}`);\n        });\n    });\n    zg.on('deviceError', (errorCode, deviceName) => {\n        console.warn(`deviceError`, errorCode, deviceName);\n    });\n    zg.on('videoDeviceStateChanged', (updateType, device) => {\n        console.warn(`videoDeviceStateChanged`, device, updateType);\n    });\n    zg.on('audioDeviceStateChanged', (updateType, deviceType, device) => {\n        console.warn(`audioDeviceStateChanged`, device, updateType, deviceType);\n    });\n    zg.on('roomOnlineUserCountUpdate', (roomID, count) => {\n        console.warn(`roomOnlineUserCountUpdate ${roomID} ${count}`);\n    });\n}\n\nasync function login(roomId) {\n    // 获取token需要客户自己实现，token是对登录房间的唯一验证\n    // Obtaining a token needs to be implemented by the customer. The token is the only verification for the login room.\n    let token = '';\n    //测试用，开发者请忽略\n    //Test code, developers please ignore\n    if (cgiToken) {\n        token = await $.get(tokenUrl, {\n            app_id: appID,\n            id_name: userID,\n            cgi_token: cgiToken,\n        });\n        //测试用结束\n        //Test code end\n    } else {\n        token = await $.get('https://wsliveroom-alpha.zego.im:8282/token', {\n            app_id: appID,\n            id_name: userID,\n        });\n    }\n    await zg.loginRoom(roomId, token, { userID, userName }, { userUpdate: true });\n    roomList.push(roomId);\n\n    return true;\n}\n\nasync function enterRoom() {\n    // const roomId = $('#roomId').val();\n    const roomId =\"111\";\n    if (!roomId) {\n        alert('roomId is empty');\n        return false;\n    }\n\n    // for (let i = 0; i < useLocalStreamList.length; i++) {\n    //     useLocalStreamList[i].streamID && zg.stopPlayingStream(useLocalStreamList[i].streamID);\n    // }\n\n    await login(roomId);\n    loginRoom = true;\n\n    // console.warn('remoteVideo')\n    // $('.remoteVideo').html('');\n\n    return true;\n}\n\nasync function logout() {\n    console.info('leave room  and close stream');\n    const roomId = $('#roomId').val();\n    // 停止拉流\n    // stop playing\n    for (let i = 0; i < useLocalStreamList.length; i++) {\n        useLocalStreamList[i].streamID && zg.stopPlayingStream(useLocalStreamList[i].streamID);\n    }\n\n    // 清空页面\n    // Clear page\n    useLocalStreamList = [];\n    // window.useLocalStreamList = [];\n\n    roomList.splice(roomList.findIndex(room => room == roomId), 1);\n\n    if (previewVideo.srcObject && isPreviewed && (!roomId || roomList.length == 0) ) {\n      previewVideo.srcObject = null;\n      zg.stopPublishingStream(publishStreamId);\n      zg.destroyStream(localStream);\n      isPreviewed = false;\n      !$('.sound').hasClass('d-none') && $('.sound').addClass('d-none');\n    }\n\n    if (!roomId || roomList.length == 0) {\n      $('.remoteVideo').html('');\n      $('#memberList').html('');\n    }\n\n    //退出登录\n    //logout\n    zg.logoutRoom(roomId);\n    loginRoom = false;\n}\n\nasync function publish(constraints, isNew) {\n    console.warn('createStream', $('#audioList').val(), $('#videoList').val());\n    console.warn('constraints', constraints);\n    const video =\n        constraints && constraints.camera && typeof constraints.camera.video === 'boolean'\n            ? constraints.camera.video\n            : undefined;\n\n    const _constraints = {\n        camera: {\n            audioInput: $('#audioList').val(),\n            videoInput: $('#videoList').val(),\n            video: video !== undefined ? video : $('#videoList').val() === '0' ? false : true,\n            audio: $('#audioList').val() === '0' ? false : true,\n            // channelCount: constraints && constraints.camera && constraints.camera.channelCount,\n        },\n    };\n    constraints && constraints.camera && Object.assign(_constraints.camera, constraints.camera);\n    !_constraints.camera.video && (previewVideo.controls = false);\n    const playType =\n        _constraints.camera.audio === false ? 'Video' : _constraints.camera.video === false ? 'Audio' : 'all';\n    publishType = playType;\n    // console.error('playType', playType);\n    push(_constraints, { extraInfo: JSON.stringify({ playType }) }, isNew);\n}\nasync function push(constraints, publishOption = {}, isNew) {\n    try {\n        if(localStream) {\n            zg.destroyStream(localStream)\n        }\n        localStream = await zg.createStream(constraints);\n        // var AudioContext = window.AudioContext || window.webkitAudioContext; // 兼容性\n        // let localTrack= localStream.getAudioTracks()[0];\n        // let audioContext = new AudioContext();// 创建Audio上下文\n        // let mediaStreamSource = audioContext.createMediaStreamSource(localStream);\n        // let destination = audioContext.createMediaStreamDestination();\n        // let gainNode = audioContext.createGain();\n        // mediaStreamSource.connect(gainNode);\n        // gainNode.connect(destination);\n        // gainNode.gain.value=3;\n        // let audioTrack = destination.stream.getAudioTracks()[0];\n        // localStream.removeTrack(localTrack);\n        // localStream.addTrack(audioTrack);\n        previewVideo.srcObject = localStream;\n        isPreviewed = true;\n        $('.sound').hasClass('d-none') && $('.sound').removeClass('d-none');\n        isNew && (publishStreamId = 'webrtc' + new Date().getTime());\n        if($(\"#videoCodec\").val()) publishOption.videoCodec = $(\"#videoCodec\").val();\n        if ($('#roomId').val()) publishOption.roomID = $('#roomId').val();\n        const result = zg.startPublishingStream(publishStreamId, localStream, publishOption);\n        console.log('publish stream' + publishStreamId, result);\n    } catch (err) {\n        if (err.name) {\n            console.error('createStream', err.name, err.message);\n        } else {\n            console.error('createStream error', err);\n        }\n    }\n}\n\n$('#toggleCamera').click(function () {\n    zg.mutePublishStreamVideo(previewVideo.srcObject, !$(this).hasClass('disabled'));\n    $(this).toggleClass('disabled');\n});\n\n$('#toggleSpeaker').click(function () {\n    zg.mutePublishStreamAudio(previewVideo.srcObject, !$(this).hasClass('disabled'));\n    $(this).toggleClass('disabled');\n});\n\n$('#enterRoom').click(async () => {\n  let loginSuc = false;\n  try {\n      loginSuc = await enterRoom();\n      if (loginSuc) {\n          if(localStream) {\n              zg.destroyStream(localStream)\n          }\n          localStream = await zg.createStream({\n              camera: {\n                  audioInput: $('#audioList').val() ,\n                  videoInput: $('#videoList').val() ,\n                  video: $('#videoList').val() === '0' ? false : true,\n                  audio: $('#audioList').val() === '0' ? false : true,\n              },\n          });\n          previewVideo.srcObject = localStream;\n          isPreviewed = true;\n          $('#videoList').val() === '0' && (previewVideo.controls = true);\n      }\n  } catch (error) {\n      console.error(error);\n  }\n});\n\nexport {\n    zg,\n    appID,\n    publishStreamId,\n    checkAnRun,\n    supportScreenSharing,\n    userID,\n    useLocalStreamList,\n    logout,\n    enterRoom,\n    push,\n    publish,\n    previewVideo,\n    isPreviewed,\n    loginRoom,\n    publishType,\n    l3,\n};\n\n// $(window).on('unload', function() {\n//     logout();\n// });\n"]}]}