{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/babel-loader/lib/index.js!/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/src/views/Teacher/components/app-stage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/src/views/Teacher/components/app-stage.vue","mtime":1629448325876},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/8-13Web端/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div class=\"message\">\n    <span id=\"hehe\"></span>\n    <p  id=\"content\"></p>\n    <span id=\"d\"></span>\n    <ul id=\"BLEDevices\"></ul>\n    </div>\n  <input type=\"button\" value=\"打开USB设备\"  @click=\"openUSB\"/>\n    <input type=\"button\" value=\"切换模式\" @click=\"changeMode\"/>\n  <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\" id=\"card\">\n    \n    <v-stage\n      id=\"stage\"\n      :config=\"stageConfig\"\n      @mousedown=\"mousedownHandler\"\n      @mouseup=\"mouseupHandler\"\n      @mousemove=\"mousemoveHandler\"\n      @touchstart=\"touchstartHandler\"\n      @touchmove=\"touchmoveHandler\"\n      @touchend=\"touchendHandler\"\n    >\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n    </v-stage>\n<canvas v-show=\"false\"  id=\"myCanvas\" class=\"board\" width=\"1228\" height=\"960\" style=\"border:1px solid black;\">\n   \n</canvas><br/>\n  </el-card>\n\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n    \n  },\n  mounted(){\n    // this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    const that = this\n    window.addEventListener('touchmove', function(){}, { passive: false })\n   \n      \n        this.canvas = document.getElementById('myCanvas')\n        this.context = this.canvas.getContext('2d')\n        // this.context.translate(this.offsetX, this.offsetY);\n\n        /*建立插件通信、添加响应函数*/\n            that.port = chrome.runtime.connect(that.editorExtensionId);\n            that.port.onMessage.addListener( function(msg){\n                that.recMessage(msg)\n            })\n\n            that.initCanvas(that.pid)\n\n    },\n  data() {\n    return {\n        // 画布配置\n        stageConfig: {\n            width: 1228,\n            height: 700\n        },\n        // 绘画状态\n        painting: false,\n        stroke: '#000000',\n        strokeWidth: 1.1,\n        vid:1155,\n        // pid:24672, //T8Y\n        pid:24671,//J7M\n        pageY : 8170, // 设备像素Y轴最大值\n        pageX : 14335, // 设备像素X轴最大值\n        port:\"\",           // 通信对象\n        editorExtensionId:'djkkhcnlplpchfbdgkdggcmlclggefbg',  // 通信ID\n\n        width : 1228,\n        height : 700,\n        offsetX : 0.5,\n        offsetY : 0.5,\n        ratioX : 1, \n        ratioY : 1,\n        x1:2, y1:2, x2:2, y2:2, res : 2,\n        canvas : \"\",\n        context : \"\",\n        isStart : 0,\n    }\n  },\n  computed: {\n    ...mapState(['lines']),\n    ...mapGetters(['isGameStarted', 'isGameHolder'])\n  },\n\n \n  methods: {\n    // 鼠标按下\n    mousedownHandler(e) {\n      if (!this.isGameHolder || !this.isGameHolder) return\n\n      this.painting = true\n      // 创建一个新线条\n      const newLine = {\n        stroke: this.stroke,\n        strokeWidth: this.strokeWidth,\n        points: [e.evt.layerX, e.evt.layerY]\n      }\n      // 本地画线, 存到vuex中\n      this.$store.commit('drawNewLine', newLine)\n      // 请求服务器\n      this.$store.dispatch('sendDrawNewLine', newLine)\n      \n    },\n\n    // 鼠标拖动\n    mousemoveHandler(e) {\n      if (!this.painting) return\n      const lastLine = this.lines[this.lines.length - 1]\n      lastLine.points = lastLine.points.concat([e.evt.layerX, e.evt.layerY])\n      console.log(lastLine)\n      this.$store.commit('updateNewLine', lastLine)\n      // 请求服务器\n      this.$store.dispatch('sendUpdateNewLine', lastLine)\n    },\n\n    // 鼠标释放\n    mouseupHandler() {\n      this.painting = false\n    },\n    // 笔按下\n    touchstartHandler(e) {\n       \n      if (!this.isGameHolder || !this.isGameHolder) return\n   \n      this.painting = true\n      // 创建一个新线条\n      const newLine = {\n        stroke: this.stroke,\n        strokeWidth: this.strokeWidth,\n        points: [e.evt.changedTouches[0].clientX-$('#card').offset().left, e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop()]\n      }\n      // 本地画线, 存到vuex中\n      this.$store.commit('drawNewLine', newLine)\n      // 请求服务器\n      this.$store.dispatch('sendDrawNewLine', newLine)\n     },\n  \n    // 笔拖动\n    touchmoveHandler(e) {\n      // e = window.event || e;\n      // console.log(e.screenX + \" \" + e.screenY);\n    \n      if (!this.painting) return\n      const lastLine = this.lines[this.lines.length - 1]\n    //   console.log($('#card').offset());\n\n      lastLine.points = lastLine.points.concat([e.evt.changedTouches[0].clientX-$('#card').offset().left, e.evt.changedTouches[0].clientY-$('#card').offset().top + $(document).scrollTop()])\n      console.log(lastLine)\n      this.$store.commit('updateNewLine', lastLine)\n      // 请求服务器\n      this.$store.dispatch('sendUpdateNewLine', lastLine)\n    },\n\n    // 笔释放\n    touchendHandler() {\n      this.painting = false\n    },\n    initCanvas(pid) {\n            const that = this\n            if (pid == 24672 || pid == 24682) {\n                // T8Y ｜｜ T8C\n                this.pageY = 21000\n                this.pageX = 29700\n            }\n            // this.height = $(window).height() > this.height ? this.height : $(window).height() - 20;\n            // this.width = parseInt(this.height * this.pageX / this.pageY);\n            // if(this.width > $(window).width() * 0.68){\n            //     this.width = parseInt($(window).width() * 0.68);\n            //     this.height = parseInt(this.width * this.pageY / this.pageX);\n            // }\n            \n            this.ratioX = this.width / this.pageX;\n            this.ratioY = this.height / this.pageY;\n            $(that.canvas).attr(\"width\", that.width);\n            $(that.canvas).attr(\"height\", that.height);\n            this.penInit()\n        },\n        recMessage(msg) {\n            switch (msg.status) {\n                case 0:\n                    $('#hehe').html('设备连接成功');\n                    break;\n                case 1:\n                    this.lineTo(msg.x, msg.y, msg.s, msg.p);\n                    break;\n                case 2:\n                    $('#hehe').html('usb操作权限获取失败');\n                    break;\n                case 3:\n                    $('#hehe').html('指定的usb设备未找到');\n                    break;\n                case 4:\n                    $('#hehe').html('usb设备连接失败及打开设备失败');\n                    break;\n                case 5: \n                    $('#hehe').html('存在打开的设备');\n                    break;\n                case 6:\n                    if (msg.mode == 'mouse') {\n                        $('#hehe').html('当前模式为鼠标模式');\n                    }else if (msg.mode == 'pen') {\n                        $('#hehe').html('当前模式为笔模式');\n                    }\n                    break;\n                case 20:\n                    $('#hehe').html(msg.dongle_status);\n                    break;\n                case 21:\n                    $('#BLEDevices').append(\"<li>\"+msg.device_name+\"<button  onclick='connectBLE(\"+msg.num+\")'>连接</button></li>\");\n                    break;\n                        case 32:\n                            window.alert('左键单击')\n                            break;\n                        case 33:\n                            window.alert('左键双击')\n                            break;\n                        case 34:\n                            window.alert('左键长按')\n                            break;\n                        case 35:\n                            window.alert('右键单击')\n                            break;\n                        case 36:\n                            window.alert('右键双击')\n                            break;\n                        case 37:\n                            window.alert('右键长按')\n                            break;\n                case 100:\n                    let c = document.getElementById('myCanvas');\n                    c.height = c.height;\n                    break;\n            }\n        },\n        penInit(){\n            this.closeUSB()\n        },\n        //打开USB设备\n        openUSB(){\n            let VID = this.vid;\n            let PID = this.pid;\n            this.port.postMessage({cmd:'openUSB',pid: PID,vid: VID});\n            this.changeMode()\n        },\n        //关闭USB设备\n        closeUSB(){\n            this.port.postMessage({cmd:'closeUSB'});\n            \n        },\n        //获取dongle状态\n        getDongleStatus() {\n            console.log(123);\n            this.port.postMessage({cmd:'dongleStatus'});\n        },\n        //扫描蓝牙\n        scanBLE(){\n            this.port.postMessage({cmd:'scanBLE'});\n        },\n        //连接蓝牙设备\n        connectBLE(num) {\n            this.port.postMessage({cmd:'connectBLE',num: num});\n        },\n        //断开蓝牙\n        disconnectBLE() {\n            this.port.postMessage({cmd:'closeBLE'});\n        },\n        // 切换笔模式\n        changeMode() {\n            this.port.postMessage({cmd:'changeMode'});\n        },\n        // clear canvas\n        clearCanvas(){\n            let c = document.getElementById('myCanvas');\n            c.height = c.height;\n            this.port.postMessage({cmd:'clearCanvas'});\n        },\n\n        lineTo(x, y, s, p){\n            const that = this\n            let tx = this.ratioX * x;\n            let ty = this.ratioY * y;\n            let tw = 0;\n            let con = 'x='+x+',y='+y+',s='+s+',p='+p;\n            $('#content').text(con);\n            if (s == 16 || s == 0) {\n                this.isStart = 0;\n                that.painting = false\n                return;\n            }\n            if(this.isStart > 0){\n                \n                this.x2 = Math.floor(this.ratioX * x);\n                this.y2 = Math.floor(this.ratioY * y);\n                let d = Math.sqrt(Math.pow(this.x1 - this.x2, 2) + Math.pow(this.y1 - this.y2, 2));\n                if(d > this.res){\n                    tx = Math.round((this.x1 + this.x2) / 2 * 100) / 100;\n                    ty = Math.round((this.y1 + this.y2) / 2 * 100) / 100;\n                    if (this.isStart == 1) {\n                       \n                    } else {\n                        this.context.quadraticCurveTo(this.x1, this.y1, tx, ty);\n                        this.context.lineWidth = tw;\n                        this.context.stroke();\n                        const lastLine = that.lines[that.lines.length - 1]\n                        lastLine.points = lastLine.points.concat([this.x1, this.y1])\n                        that.$store.commit('updateNewLine', lastLine)\n                        // 请求服务器\n                        that.$store.dispatch('sendUpdateNewLine', lastLine)\n                        this.context.beginPath();\n\n                        this.context.moveTo(tx,ty);\n                        // that.painting = true\n                                        // 创建一个新线条\n                                        // const newLine = {\n                                        //     stroke: this.stroke,\n                                        //     strokeWidth: this.strokeWidth,\n                                        //     points: [tx, ty]\n                                        // }\n                                        // // 本地画线, 存到vuex中\n                                        // that.$store.commit('drawNewLine', newLine)\n                                        // // 请求服务器\n                                        // that.$store.dispatch('sendDrawNewLine', newLine)\n                        \n                        \n                        \n                        //  lastLine = that.lines[that.lines.length - 1]\n                        //     lastLine.points = lastLine.points.concat([this.x1, this.y1])\n                        //     console.log(lastLine)\n                        //     that.$store.commit('updateNewLine', lastLine)\n                        //     // 请求服务器\n                        //     that.$store.dispatch('sendUpdateNewLine', lastLine)\n                        \n                        // console.log(tx + \" \" + ty);\n                        \n                            \n                        \n                            \n                    }\n                    this.x1 = this.x2;\n                    this.y1 = this.y2;\n                }\n                this.isStart++;\n                that.painting = true\n            }else{\n                /* 初始化画点*/\n                this.isStart = 1;\n                this.context.beginPath();\n                this.context.lineCap = \"round\";\n                this.context.strokeStyle = \"#000\";//新增\n                this.x1 = tx;\n                this.y1 = ty;\n                this.context.moveTo(tx, ty);//起点\n                this.isStart++;\n                that.painting = true\n                // 创建一个新线条\n                const newLine = {\n                    stroke: this.stroke,\n                    strokeWidth: this.strokeWidth,\n                    points: [tx, ty]\n                }\n                // 本地画线, 存到vuex中\n                that.$store.commit('drawNewLine', newLine)\n                // 请求服务器\n                that.$store.dispatch('sendDrawNewLine', newLine)\n\n                this.context.lineTo(tx, ty);\n                const lastLine = that.lines[that.lines.length - 1]\n                lastLine.points = lastLine.points.concat([tx + 0.5, ty + 0.5])\n                that.$store.commit('updateNewLine', lastLine)\n                // 请求服务器\n                that.$store.dispatch('sendUpdateNewLine', lastLine)\n\n\n            }\n        }\n\n    \n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-card{\n     touch-action: none;\n     width: 1228px;\n     overflow: auto;\n}\n</style>\n"],"sourceRoot":"src/views/Teacher/components"}]}