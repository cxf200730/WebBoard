{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue","mtime":1630477637348},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div style=\"display:flex\">\n  <div>\n    <div class=\"info\">\n      <div>\n        <span>第五讲 扫雷</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>第一题</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>共12题</span>\n      </div>\n      <!-- <el-button @click = \"test\">save</el-button> -->\n      <!--  <el-button @click = \"test2\">get</el-button> -->\n      <div>\n        <!-- <span @touchstart=\"clear\">清空</span> -->\n          <el-divider direction=\"vertical\"></el-divider>\n        <span @touchstart=\"beforeTopic\">上一题</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span @touchstart=\"nextTopic\">下一题</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <!-- <span @click = \"remove\">提交</span> -->\n      </div>\n    </div>\n  \n    <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\" id=\"card\">\n    <v-stage\n      id=\"stage\"\n      :config=\"stageConfig\"\n      @touchstart=\"touchstartHandler\"\n      @touchmove=\"touchmoveHandler\"\n      @touchend=\"touchendHandler\"\n    >\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in teacherLines[id-1]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in topic[index]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <v-line\n          v-for=\"(line, index) in initexam[index]\"\n          :key=\"index\"\n          :config=\"{\n            stroke: '#FFF111',\n            strokeWidth:1.5,\n            points:line.points,\n            lineCap: line.lineCap,\n            lineJoin: line.lineJoin,\n            bezier:line.bezier,\n            rotation:line.rotation,}\"\n        />\n      </v-layer>\n    </v-stage>\n  </el-card>\n  </div>\n\n  <div style=\"margin:0 auto;margin-top:50px;\">\n    <el-scrollbar  max-height=\"400px\">\n      <el-button  @click=\"chooseItem(item)\" style=\"margin-left:10px\" size=\"small\" class=\"item\" v-for=\"item in 5\" :key=\"item\">\n        {{ item }}\n      </el-button>\n    </el-scrollbar>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n    const that = this\n    let exam = []\n      this.axios.get('http://192.168.51.109:3000/exam',{\n      }).then((res)=>{\n        for (let k = 0; k < res.data.message.length; k++) {\n          const count = JSON.parse(res.data.message[k].topic_content)\n          // console.log(JSON.parse(res.data.message[k].topic_content));\n          for (let i = 0; i < count.length; i++) {\n            for (let j = 0; j < count[i].points.length; j++) {\n              if(j % 2 == 0){\n                count[i].points[j] *= that.getXb\n              }else{\n                count[i].points[j] *= that.getYb\n              }\n            }\n          }\n          exam[k] = count\n        }\n        this.$store.commit('initexam', exam)\n      })\n  },\n  mounted(){\n    this.id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n    // this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    window.addEventListener('touchmove', function(){}, { passive: false })\n    this.getXb =  document.getElementById('card').clientWidth\n    this.getYb =  document.getElementById('card').clientHeight\n    this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    this.stageConfig.height = this.$refs.wrapper.$el.offsetHeight\n    // console.log(this.$refs.wrapper.getNode());\n    this.$store.commit('initXb', this.getXb)\n    this.$store.commit('initYb', this.getYb)\n    const that = this\n    \n\n      this.axios.post('http://192.168.51.109:3000/student/gettopic',{\n        stucode:localStorage.getItem('teacherphone'),\n      }).then((res)=>{\n        console.log(res.data.message);\n        for (let k = 0; k < res.data.message.length; k++) {\n          const count = JSON.parse(res.data.message[k].stuanswer)\n          for (let i = 0; i < count.length; i++) {\n            for (let j = 0; j < count[i].points.length; j++) {\n              if(j % 2 == 0){\n                count[i].points[j] *= that.getXb\n              }else{\n                count[i].points[j] *= that.getYb\n              }\n            }\n          }\n          // console.log(parseInt(res.data.message[k].topic_index - 1));\n          that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n        }\n        // console.log(this.topic);\n      })\n    },\n  data() {\n    return {\n      getXb:1,\n      getYb:1,\n        // 画布配置\n        stageConfig: {\n            width: 560,\n            height: 450\n        },\n        imgConfig:{\n          image:\"\",\n          width: 560\n        },\n        // 绘画状态\n        painting: false,\n        stroke: '#000000',\n        strokeWidth: 2,\n        pictureIndex:0,\n        id:0,\n        getlines:[],\n        topic:[[],[],[],[],[]],\n        index:0\n    }\n\n  },\n  computed: {\n    ...mapState(['lines','teacherLines','savelines','initexam']),\n    ...mapGetters(['isGameStarted', 'isGameHolder'])\n  },\n\n \n  methods: {\n    test(){\n      const id = localStorage.getItem('teacherphone')\n      console.log(id);\n      this.axios.post('http://192.168.51.109:3000/exam/addtopic',{\n        topic_index:\"5\",\n        topic_content:this.savelines\n      }).then((res)=>{\n        if(res.data.err_code === 0){\n          alert(\"保存成功\")\n        }\n      })\n    },\n    test2(){\n      const that = this\n      this.axios.get('http://192.168.51.109:3000/exam',{\n      }).then((res)=>{\n        console.log(res.data.message)\n        for (let i = 0; i < res.data.message.length; i++) {\n          that.exam[i] = JSON.parse(res.data.message[i].topic_content)\n        }\n        console.log(that.exam);\n      })\n    },\n    chooseItem(index){\n      this.$store.commit('clearLine')\n      let temp = this.index + 1\n      // console.log();\n      // console.log(this.topic[this.index].length);\n      this.index = index - 1\n     \n      const that = this\n      that.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:that.index + 1})\n    \n      // console.log(this.savelines);\n      if(this.savelines.length != 0){\n        \n        if(this.topic[temp - 1].length === 0){\n          console.log(\"new\");\n          this.axios.post('http://192.168.51.109:3000/student/savetopic',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:(temp).toString(),\n            stuanswer:this.savelines,\n            // update_answer:\"\",\n            fintime:\"0\"\n          }).then((res)=>{\n            if(res.data.err_code === 0){\n              // alert(\"保存成功\")\n              that.$store.commit('clearsaveLine')\n\n              that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                  // that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n\n            }\n          })\n        }else{\n          console.log(\"update\");\n          that.axios.post('http://192.168.51.109:3000/student/updatetopic',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then((res)=>{\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  that.savelines.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                // console.log(that.savelines);\n                that.axios.post('http://192.168.51.109:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then(res => {\n                // console.log(res.data);\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                  // that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n              })\n              })\n        }\n    \n      }\n\n    },\n    nextTopic(){\n      const that = this\n      // console.log(this.index);\n      if(this.index == 4){\n        this.index = 4\n      }else{\n        this.index++\n        this.$store.commit('clearLine')\n        that.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:that.index + 1})\n        if(this.savelines.length != 0){\n\n          if(this.topic[this.index - 1].length === 0){\n            // console.log(\"new\" + (this.index - 1));\n          this.axios.post('http://192.168.51.109:3000/student/savetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(this.index).toString(),\n              stuanswer:this.savelines,\n              // update_answer:\"\",\n              fintime:\"0\"\n            }).then((res)=>{\n              if(res.data.err_code === 0){\n                // alert(\"保存成功\")\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                  stucode:localStorage.getItem('teacherphone'),\n                }).then((res)=>{\n                  // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                  for (let k = 0; k < res.data.message.length; k++) {\n                    const count = JSON.parse(res.data.message[k].stuanswer)\n                    for (let i = 0; i < count.length; i++) {\n                      // console.log(count[i]);\n                      for (let j = 0; j < count[i].points.length; j++) {\n                        if(j % 2 == 0){\n                          // console.log(j);\n                          count[i].points[j] *= that.getXb\n                        }else{\n                          count[i].points[j] *= that.getYb\n                        }\n                      }\n                    }\n                    that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                  }\n                  // console.log(that.topic);\n                })\n\n              }\n            })\n          }else{\n            console.log(\"update\");\n          that.axios.post('http://192.168.51.109:3000/student/updatetopic',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(this.index).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then((res)=>{\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  that.savelines.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                // console.log(that.savelines);\n                that.axios.post('http://192.168.51.109:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(this.index).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then(res => {\n                // console.log(res.data);\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                  // that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n              })\n              })\n          }\n        }\n      }\n    },\n    clear(){\n      console.log(1);\n      this.$store.commit('clearLine')\n    },\n    beforeTopic(){\n      const that = this\n      // alert(this.index);\n      if(this.index == 0){\n        this.index = 0\n      }else{\n        this.index--\n        this.$store.commit('clearLine')\n        that.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:that.index + 1})\n        if(this.savelines.length != 0){\n          if(this.topic[this.index + 1].length === 0){\n          // if(this.index + 1 === 0){\n        this.axios.post('http://192.168.51.109:3000/student/savetopic',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:(this.index + 2).toString(),\n            stuanswer:this.savelines,\n            // update_answer:\"\",\n            fintime:\"0\"\n          }).then((res)=>{\n            // console.log(res);\n            if(res.data.err_code === 0){\n              // alert(\"保存成功\")\n            \n              that.$store.commit('clearsaveLine')\n\n              that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n\n            }\n          })}else{\n            console.log(\"update\");\n          that.axios.post('http://192.168.51.109:3000/student/updatetopic',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(this.index + 2).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then((res)=>{\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  that.savelines.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                // console.log(that.savelines);\n                that.axios.post('http://192.168.51.109:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(this.index + 2).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then(res => {\n                // console.log(res.data);\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.109:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                  // that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n              })\n              })\n          }\n        }\n      }\n    },\n    remove(){\n      this.axios.post('http://192.168.51.109:3000/student/savetopic',{\n        stucode:localStorage.getItem('teacherphone'),\n        room:\"1001\",\n        exam_code:\"1001\",\n        topic_index:(this.index + 1).toString(),\n        stuanswer:this.savelines,\n        // update_answer:\"\",\n        fintime:\"0\"\n      }).then((res)=>{\n        if(res.data.err_code === 0){\n          alert(\"保存成功\")\n        }\n      })\n      // localStorage.removeItem('studentcode');\n      // localStorage.removeItem('classcode');\n      // localStorage.removeItem('teacherphone')\n      // this.$router.push('login')\n    },\n    \n    // 笔按下\n    touchstartHandler(e) {\n      // alert(2)\n      // if (!this.isGameHolder || !this.isGameHolder) return\n      this.painting = true\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      // console.log(newX);\n      // 创建一个新线条\n      const newLine = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        //341458\n        lineJoin: 'round',\n        preventDefault: false,\n        // tension:0.1,\n        // bezier:true,\n        // draggable:true\n        // fill:\"#FFF111\",\n        rotation:0.1,\n        // shadowBlur:0.2\n      }\n      const newLine2 = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        //341458\n        lineJoin: 'round',\n        preventDefault: false,\n        // tension:0.1,\n        // bezier:true,\n        // draggable:true\n        // fill:\"#FFF111\",\n        rotation:0.1,\n        // shadowBlur:0.2\n      }\n      // 请求服务器\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      this.$store.dispatch('sendDrawNewLine', {newLine:newLine,id:id})\n      \n      // 本地画线, 存到vuex中\n      this.$store.commit('saveNewLine', newLine)\n      this.$store.commit('drawNewLine', newLine2)\n      \n     },\n\n    // 笔拖动\n    touchmoveHandler(e) {\n      if (!this.painting) return\n      this.nowX = document.getElementById('card').clientWidth\n      const lastLine = this.lines[this.lines.length - 1]\n      const savelastLine = this.savelines[this.savelines.length - 1]\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      lastLine.points = lastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      savelastLine.points = savelastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      if(lastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n      if(savelastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n     \n      // 请求服务器\n      this.$store.dispatch('stuUpdateNewLine', {lastLine:lastLine,id:id})\n      this.$store.commit('saveupdateNewLine1', savelastLine)\n      this.$store.commit('updateNewLine1', lastLine)\n    },\n\n    // 笔释放\n    touchendHandler() {\n      this.painting = false\n    },\n    \n    \n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-card{\n  touch-action: none;\n  height: 640px;\n  width: 590px;\n  overflow: hidden;\n  background-color: rgb(33, 33, 33);\n}\n\n.info{\n       height: 20px;\n       width: 575px;\n       padding: 10px;\n       line-height: 25px;\n      //  font-size: 20px;\n      //  border:#000000 solid 1px;\n       display: flex;\n       justify-content: space-between;\n      // background-color: chartreuse;\n     }\n     .item{\n       margin-bottom: 10px;\n     }\n    .el-scrollbar {\n    position: relative;\n    max-height: 620px;\n    width: 70px;\n    // overflow: auto;\n    // overflow-x: scroll;\n}\n</style>\n"],"sourceRoot":"src/views/Student/components"}]}