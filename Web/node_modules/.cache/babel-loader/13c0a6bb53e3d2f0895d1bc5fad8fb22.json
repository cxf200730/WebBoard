{"remainingRequest":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/src/views/Student/components/app-stage.vue","mtime":1631169361686},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengxiaofeng/Desktop/项目/手写板项目/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["app-stage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div style=\"display:flex\">\n  <div>\n    <div class=\"info\">\n      <div>\n        <span>第五讲 扫雷</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>第一题</span>\n          <el-divider direction=\"vertical\"></el-divider>\n        <span>共12题</span>\n      </div>\n      <div>\n          <el-divider direction=\"vertical\"></el-divider>\n        <i @touchstart=\"beforeTopic\">上一题</i>\n          <el-divider direction=\"vertical\"></el-divider>\n        <i @touchstart=\"nextTopic\">下一题</i>\n          <el-divider direction=\"vertical\"></el-divider>\n        <!-- <span @click = \"remove\">提交</span> -->\n      </div>\n    </div>\n  \n    <el-card ref=\"wrapper\" :body-style=\"{ padding: 0 }\" id=\"card\">\n    <v-stage\n      id=\"stage\"\n      :config=\"stageConfig\"\n      @touchstart=\"touchstartHandler\"\n      @touchmove=\"touchmoveHandler\"\n      @touchend=\"touchendHandler\"\n    >\n      <v-layer>\n      <!-- 学生实时画的线 -->\n        <v-line\n          v-for=\"(line, index) in lines\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 老师实时画的线 -->\n        <v-line\n          v-for=\"(line, index) in teacherLines[id-1]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 学生保存的笔迹 -->\n        <v-line\n          v-for=\"(line, index) in topic[index]\"\n          :key=\"index\"\n          :config=\"line\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 老师保存的笔迹 -->\n        <v-line\n          v-for=\"(line, index) in topic2[index]\"\n          :key=\"index\"\n          :config=\"{\n            stroke: '#d42d1f',\n            strokeWidth:1.5,\n            points:line.points,\n            lineCap: line.lineCap,\n            lineJoin: line.lineJoin,\n            bezier:line.bezier,\n            rotation:line.rotation,}\"\n        />\n      </v-layer>\n      <v-layer>\n        <!-- 试卷题目 -->\n        <v-line\n          v-for=\"(line, index) in initexam[index]\"\n          :key=\"index\"\n          :config=\"{\n            stroke: '#FFF111',\n            strokeWidth:1.5,\n            points:line.points,\n            lineCap: line.lineCap,\n            lineJoin: line.lineJoin,\n            bezier:line.bezier,\n            rotation:line.rotation,}\"\n        />\n      </v-layer>\n    </v-stage>\n  </el-card>\n  </div>\n\n  <div style=\"margin:0 auto;margin-top:50px;\">\n    <el-scrollbar  max-height=\"400px\">\n      <el-button  @click=\"chooseItem(item)\" style=\"margin-left:10px\" size=\"small\" class=\"item\" v-for=\"item in 5\" :key=\"item\">\n        {{ item }}\n      </el-button>\n    </el-scrollbar>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nexport default {\n  created(){\n    const that = this\n    let exam = []\n    // 页面初始化获取试卷题目，并保存到VueX中\n    this.axios.get('http://192.168.51.117:3000/exam',{\n      }).then((res)=>{\n        for (let k = 0; k < res.data.message.length; k++) {\n          const count = JSON.parse(res.data.message[k].topic_content)\n          for (let i = 0; i < count.length; i++) {\n            for (let j = 0; j < count[i].points.length; j++) {\n              if(j % 2 == 0){\n                count[i].points[j] *= that.getXb\n              }else{\n                count[i].points[j] *= that.getYb\n              }\n            }\n          }\n          exam[k] = count\n        }\n      this.$store.commit('initexam', exam)\n    })\n  },\n  mounted(){\n    this.id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n    window.addEventListener('touchmove', function(){}, { passive: false })\n    this.getXb = document.getElementById('card').clientWidth\n    this.getYb = document.getElementById('card').clientHeight\n    this.stageConfig.width = this.$refs.wrapper.$el.offsetWidth\n    this.stageConfig.height = this.$refs.wrapper.$el.offsetHeight\n    this.$store.commit('initXb', this.getXb)\n    this.$store.commit('initYb', this.getYb)\n    const that = this\n    // 获取之前保存的笔迹\n    this.axios.post('http://192.168.51.117:3000/student/gettopic',{\n      stucode:localStorage.getItem('teacherphone'),\n    }).then((res)=>{\n      for (let k = 0; k < res.data.message.length; k++) {\n        let count\n        let count2\n        // 学生做题笔迹\n        count = JSON.parse(res.data.message[k].stuanswer)\n        // 老师批改笔迹\n        if(res.data.message[k].updateanswer != null){\n          count2 = JSON.parse(res.data.message[k].updateanswer)\n        }\n        // 获取数据库学生做题的笔迹保存到that.topic\n        for (let i = 0; i < count.length; i++) {\n          for (let j = 0; j < count[i].points.length; j++) {\n            if(j % 2 == 0){\n              count[i].points[j] *= that.getXb\n            }else{\n              count[i].points[j] *= that.getYb\n            }\n          }\n        }\n        that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n        // 获取数据库老师批改的笔迹保存到that.topic2\n        if(count2 != undefined){\n          for (let i = 0; i < count2.length; i++) {\n            for (let j = 0; j < count2[i].points.length; j++) {\n              if(j % 2 == 0){\n                count2[i].points[j] *= that.getXb\n              }else{\n                count2[i].points[j] *= that.getYb\n              }\n            }\n          }\n        }\n        if(count2 != undefined)\n          that.topic2[parseInt(res.data.message[k].topic_index - 1)] = count2\n      }\n    })\n  },\n\n  data() {\n    return {\n      // 画板的宽\n      getXb:1,\n      // 画板的高\n      getYb:1,\n      // 画布配置\n      stageConfig: {\n        width: 560,\n        height: 450\n      },\n      // 绘画状态\n      painting: false,\n      // 画笔颜色\n      stroke: '#000000',\n      // 画笔宽度\n      strokeWidth: 2,\n      // 学生学号后两位\n      id:0,\n      getlines:[],\n      // 学生答题记录\n      topic:[[],[],[],[],[]],\n      // 老师批改记录\n      topic2:[[],[],[],[],[]],\n      // 当前显示下标\n      index:0\n    }\n\n  },\n  computed: {\n    // 学生实时画的线，老师实时画的线，要保存的线，试卷题目\n    ...mapState(['lines','teacherLines','savelines','initexam'])\n  },\n\n \n  methods: {\n    chooseItem(index){\n      this.$store.commit('clearLine')\n      let temp = this.index + 1\n      // console.log();\n      // console.log(this.topic[this.index].length);\n      this.index = index - 1\n     \n      const that = this\n      that.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:that.index + 1})\n    \n      // console.log(this.savelines);\n      if(this.savelines.length != 0){\n        \n        if(this.topic[temp - 1].length === 0){\n          console.log(\"new\");\n          this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:(temp).toString(),\n            stuanswer:this.savelines,\n            // update_answer:\"\",\n            fintime:\"0\"\n          }).then((res)=>{\n            if(res.data.err_code === 0){\n              // alert(\"保存成功\")\n              that.$store.commit('clearsaveLine')\n\n              that.axios.post('http://192.168.51.117:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  const count2 = JSON.parse(res.data.message[k].updateanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n        \n                        // console.log(j);\n                        count[i].points[j] *= that.getXb\n                       \n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n\n            }\n          })\n        }else{\n          console.log(\"update\");\n          that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  that.savelines.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                // console.log(that.savelines);\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(temp).toString(),\n                stuanswer:that.savelines,\n                // update_answer:\"\",\n                fintime:\"0\"\n              }).then(res => {\n                // console.log(res.data);\n                that.$store.commit('clearsaveLine')\n\n                that.axios.post('http://192.168.51.117:3000/student/gettopic',{\n                stucode:localStorage.getItem('teacherphone'),\n              }).then((res)=>{\n                // console.log(JSON.parse(res.data.message[that.index].stuanswer))\n                for (let k = 0; k < res.data.message.length; k++) {\n                  const count = JSON.parse(res.data.message[k].stuanswer)\n                  const count2 = JSON.parse(res.data.message[k].updateanswer)\n                  for (let i = 0; i < count.length; i++) {\n                    // console.log(count[i]);\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                  }\n                  if(count2 != null){\n            \n          that.topic2[parseInt(res.data.message[k].topic_index - 1)] =count2\n          }\n                  that.topic[parseInt(res.data.message[k].topic_index - 1)] = count\n                }\n                // console.log(that.topic);\n              })\n              })\n              })\n        }\n    \n      }\n\n    },\n    // 下一题\n    nextTopic(){\n      const that = this\n      if(this.index == 4){\n        this.index = 4\n      }else{\n        this.index++\n        //定义一个变量用来判断老师是否需要更新数据\n        var isupdate = 0\n         // 如果切换题目的时候，学生在上一块画板上画过\n        if(this.savelines.length != 0){\n          isupdate=1\n          let savetemp = this.savelines\n          // 清空saveline\n          this.$store.commit('clearsaveLine')\n          // 如果上一块画板是空画板，则添加一条新纪录\n          if(this.topic[this.index - 1].length === 0){\n            let saveindex = this.index - 1\n            // 把学生实时笔迹保存到本地变量\n            this.topic[parseInt(saveindex)] = this.lines\n            // 清空学生实时笔迹\n            this.$store.commit('clearLine')\n            this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(this.index).toString(),//第几道题\n              stuanswer:savetemp,\n              fintime:\"0\"\n            }).then((res)=>{\n              \n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            let saveindex = this.index\n            let templines = []\n            for (let i = 0; i < this.lines.length; i++) {\n              templines[i] = this.lines[i]\n            }\n            this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(saveindex).toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                // 找到后，把之前保存的点的数据添加到savetemp后面，然后再将数据库中的数据修改成savetemp\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  savetemp.push(JSON.parse(res.data.message[0].stuanswer)[i]) \n                }\n                for (let i = 0; i < count.length; i++) {\n                  for (let j = 0; j < count[i].points.length; j++) {\n                    if(j % 2 === 0){\n                      count[i].points[j] *= that.getXb\n                    }else{\n                      count[i].points[j] *= that.getYb\n                    }\n                    templines.push(count[i])\n                  }\n                }\n                  that.topic[parseInt(saveindex-1)] = templines\n                  \n                // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:(saveindex).toString(),\n                stuanswer:savetemp\n              }).then(res => {\n                \n              })\n            })\n          }\n        }\n        // 如果切换题目的时候，老师在上一块板画过\n        if(this.teacherLines[this.id-1].length != 0){\n          isupdate+=10\n          // 保存老师画的笔迹\n          let savetemp = []\n          let templines = []\n          let saveindex = this.index\n          \n\n          if(this.topic2[parseInt(saveindex - 1)].length === 0){\n            for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n            savetemp[i] = this.teacherLines[this.id-1][i]\n            templines[i] = this.teacherLines[this.id-1][i]\n          }\n          // 清空老师的实时笔迹\n          this.$store.commit('clearteacherLine',this.id-1)\n            // 把点换算为百分比的点\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] /= this.getXb\n                }else{\n                  savetemp[i].points[j] /= this.getYb\n                }\n              }\n            }\n\n          // 保存老师画的点\n          that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n            stucode:localStorage.getItem('teacherphone'),\n            room:\"1001\",\n            exam_code:\"1001\",\n            topic_index:saveindex.toString(),\n            updateanswer:savetemp,\n            fintime:\"0\"\n          }).then(res => {\n            \n            // 重新获取数据库中最新的数据\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] *= that.getXb\n                }else{\n                  savetemp[i].points[j] *= that.getYb\n                }\n              }\n            }\n            that.topic2[parseInt(saveindex - 1)] = savetemp\n          })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n              savetemp[i] = this.teacherLines[this.id-1][i]\n              templines[i] = this.teacherLines[this.id-1][i]\n            }\n              // 清空老师的实时笔迹\n              this.$store.commit('clearteacherLine',this.id-1)\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].updateanswer)\n                let count2 = JSON.parse(res.data.message[0].updateanswer)\n                new Promise((reslove,rej) => {\n                  for (let i = 0; i < count.length; i++) {\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 === 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                    templines.push(count[i])\n                  }\n                that.topic2[parseInt(saveindex - 1)] = templines\n                console.log(templines);\n                reslove(\"yes\")\n               }).then(res=>{\n                  let temp = []\n                  for (let i = 0; i < savetemp.length; i++) {\n                    temp.push(JSON.parse(JSON.stringify(savetemp[i])))\n                  }\n                 for (let i = 0; i < temp.length; i++) {\n                    for (let j = 0; j < temp[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        temp[i].points[j] /= this.getXb\n                      }else{\n                        temp[i].points[j] /= this.getYb\n                      }\n                    }\n                  }\n                  for (let i = 0; i < count2.length; i++) {\n                    temp.push(count2[i])\n                  }\n                  // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n                  stucode:localStorage.getItem('teacherphone'),\n                  room:\"1001\",\n                  exam_code:\"1001\",\n                  topic_index:(saveindex).toString(),\n                  updateanswer:temp\n                }).then(res => {\n              \n                })\n                })\n               })\n               \n                \n                \n             \n            \n          }  \n        }\n        // 给老师发学号后两位和题号,更新数据那些数据\n        // 0不更新 1只更新学生 10只更新老师 11都更新\n        this.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:this.index + 1,isupdate:isupdate})\n      }\n    },\n    // 上一题\n    beforeTopic(){\n      const that = this\n      if(this.index == 0){\n        this.index = 0\n      }else{\n        this.index--\n        //定义一个变量用来判断老师是否需要更新数据\n        var isupdate = 0\n        // 如果切换题目的时候，学生在上一块画板上画过\n        if(this.savelines.length != 0){\n          isupdate=1\n          let savetemp = this.savelines\n          // 先清空saveline\n          this.$store.commit('clearsaveLine')\n          // 如果上一块画板是空画板，则添加一条新纪录\n          if(this.topic[this.index +1].length === 0){\n            let saveindex = this.index + 1\n            that.topic[parseInt(saveindex)] = this.lines\n            this.$store.commit('clearLine')\n            this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:(this.index + 2).toString(),//第几道题\n              stuanswer:savetemp,\n              fintime:\"0\"\n            }).then((res)=>{\n              // console.log(1);\n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n            let saveindex = this.index + 2\n            let templines = []\n            for (let i = 0; i < this.lines.length; i++) {\n              templines[i] = this.lines[i]\n            }\n            this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].stuanswer)\n                // 找到后，把之前保存的点的数据添加到savetemp后面，然后再将数据库中的数据修改成savetemp\n                for (let i = 0; i < JSON.parse(res.data.message[0].stuanswer).length; i++) {\n                  savetemp.push(JSON.parse(res.data.message[0].stuanswer)[i])\n                }\n                for (let i = 0; i < count.length; i++) {\n                  for (let j = 0; j < count[i].points.length; j++) {\n                    if(j % 2 === 0){\n                      count[i].points[j] *= that.getXb\n                    }else{\n                      count[i].points[j] *= that.getYb\n                    }\n                    templines.push(count[i])\n                  }\n                }\n                  that.topic[parseInt(saveindex - 1)] = templines\n                // 修改数据库中的数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic2',{\n                stucode:localStorage.getItem('teacherphone'),\n                room:\"1001\",\n                exam_code:\"1001\",\n                topic_index:saveindex.toString(),\n                stuanswer:savetemp\n              }).then(res => {\n                \n              })\n            })\n          }\n        }\n        // 如果切换题目的时候，老师在上一块板画过\n        if(this.teacherLines[this.id-1].length != 0){\n          isupdate+=10\n          // 保存老师画的笔迹\n          let savetemp = []\n          let templines = []\n          let saveindex = this.index + 2\n          for (let i = 0; i < this.teacherLines[this.id-1].length; i++) {\n            savetemp[i] = this.teacherLines[this.id-1][i]\n            templines[i] = this.teacherLines[this.id-1][i]\n          }\n          // 清空老师的实时笔迹\n          this.$store.commit('clearteacherLine',this.id-1)\n          if(this.topic2[this.index +1].length === 0){\n            // 把点换算为百分比的点\n            for (let i = 0; i < savetemp.length; i++) {\n              for (let j = 0; j < savetemp[i].points.length; j++) {\n                if(j % 2 == 0){\n                  savetemp[i].points[j] /= this.getXb\n                }else{\n                  savetemp[i].points[j] /= this.getYb\n                }\n              }\n            }\n            // 保存老师画的点\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString(),\n              updateanswer:savetemp,\n              fintime:\"0\"\n            }).then(res => {\n              // 清空老师的实时笔迹\n            this.$store.commit('clearteacherLine',this.id-1)\n              // 重新获取数据库中最新的数据\n              for (let i = 0; i < savetemp.length; i++) {\n                for (let j = 0; j < savetemp[i].points.length; j++) {\n                  if(j % 2 == 0){\n                    savetemp[i].points[j] *= that.getXb\n                  }else{\n                    savetemp[i].points[j] *= that.getYb\n                  }\n                }\n              }\n              that.topic2[parseInt(saveindex - 1)] = savetemp\n            })\n          }else{\n            // 如果上一块画板不是空画板，则找到那条记录，向里面的点添加数据\n            console.log(\"update\");\n             // 清空老师的实时笔迹\n            this.$store.commit('clearteacherLine',this.id-1)\n            // this.$store.commit('clearLine')\n            // 找到要修改的那条题目数据（根据学号，房间号，试卷号，题号确定唯一索引）\n            that.axios.post('http://192.168.51.117:3000/student/updatetopic',{\n              stucode:localStorage.getItem('teacherphone'),\n              room:\"1001\",\n              exam_code:\"1001\",\n              topic_index:saveindex.toString()\n              }).then((res)=>{\n                let count = JSON.parse(res.data.message[0].updateanswer)\n                let count2 = JSON.parse(res.data.message[0].updateanswer)\n                new Promise((reslove,rej) => {\n                  for (let i = 0; i < count.length; i++) {\n                    for (let j = 0; j < count[i].points.length; j++) {\n                      if(j % 2 === 0){\n                        count[i].points[j] *= that.getXb\n                      }else{\n                        count[i].points[j] *= that.getYb\n                      }\n                    }\n                    templines.push(count[i])\n                  }\n                that.topic2[parseInt(saveindex - 1)] = templines\n                console.log(templines);\n                reslove(\"yes\")\n               }).then(res=>{\n                  let temp = []\n                  for (let i = 0; i < savetemp.length; i++) {\n                    temp.push(JSON.parse(JSON.stringify(savetemp[i])))\n                  }\n                 for (let i = 0; i < temp.length; i++) {\n                    for (let j = 0; j < temp[i].points.length; j++) {\n                      if(j % 2 == 0){\n                        temp[i].points[j] /= this.getXb\n                      }else{\n                        temp[i].points[j] /= this.getYb\n                      }\n                    }\n                  }\n                  for (let i = 0; i < count2.length; i++) {\n                    temp.push(count2[i])\n                  }\n                  // 修改数据\n                that.axios.post('http://192.168.51.117:3000/student/updatetopic3',{\n                  stucode:localStorage.getItem('teacherphone'),\n                  room:\"1001\",\n                  exam_code:\"1001\",\n                  topic_index:(saveindex).toString(),\n                  updateanswer:temp\n                }).then(res => {\n              \n                })\n                })\n               })\n  \n          }\n          \n          \n        }\n          // 给老师发学号后两位和题号,更新数据那些数据\n          // 0不更新 1只更新学生 10只更新老师 11都更新\n        this.$store.dispatch('changeTopic', {id:localStorage.getItem('teacherphone'),indexTopic:this.index + 1,isupdate:isupdate})\n      }\n    },\n    \n    remove(){\n      this.axios.post('http://192.168.51.117:3000/student/savetopic',{\n        stucode:localStorage.getItem('teacherphone'),\n        room:\"1001\",\n        exam_code:\"1001\",\n        topic_index:(this.index + 1).toString(),\n        stuanswer:this.savelines,\n        // update_answer:\"\",\n        fintime:\"0\"\n      }).then((res)=>{\n        if(res.data.err_code === 0){\n          alert(\"保存成功\")\n        }\n      })\n    },\n    \n    // 笔按下\n    touchstartHandler(e) {\n      this.painting = true\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      // 创建一个新线条\n      const newLine = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        lineJoin: 'round',\n        preventDefault: false,\n        // bezier:true,\n        rotation:0.1,\n      }\n      const newLine2 = {\n        points: [newX / this.getXb , newY / this.getYb,(newX + 0.5) / this.getXb,(newY + 0.5) / this.getYb],\n        stroke: \"#FFFFFF\",\n        strokeWidth: 1,\n        lineCap: 'round',\n        lineJoin: 'round',\n        preventDefault: false,\n        rotation:0.1,\n      }\n      // 请求服务器\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      this.$store.dispatch('sendDrawNewLine', {newLine:newLine,id:id})\n      \n      // 本地画线, 存到vuex中\n      this.$store.commit('saveNewLine', newLine)\n      this.$store.commit('drawNewLine', newLine2)\n      \n     },\n\n    // 笔拖动\n    touchmoveHandler(e) {\n      if (!this.painting) return\n      this.nowX = document.getElementById('card').clientWidth\n      const lastLine = this.lines[this.lines.length - 1]\n      const savelastLine = this.savelines[this.savelines.length - 1]\n      let newX = Math.ceil(e.evt.changedTouches[0].clientX-$('#card').offset().left)\n      let newY = Math.ceil(e.evt.changedTouches[0].clientY-$('#card').offset().top+ $(document).scrollTop())\n      lastLine.points = lastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      savelastLine.points = savelastLine.points.concat([newX / this.getXb , newY / this.getYb])\n      const id = localStorage.getItem('teacherphone').slice(6,localStorage.getItem('teacherphone').length)\n      if(lastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n      if(savelastLine.points.length > 6){\n        lastLine.bezier = true\n      }\n     \n      // 请求服务器\n      this.$store.dispatch('stuUpdateNewLine', {lastLine:lastLine,id:id})\n      this.$store.commit('saveupdateNewLine1', savelastLine)\n      this.$store.commit('updateNewLine1', lastLine)\n    },\n\n    // 笔释放\n    touchendHandler() {\n      this.painting = false\n    },\n    \n    \n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-card{\n  touch-action: none;\n  height: 640px;\n  width: 590px;\n  overflow: hidden;\n  background-color: rgb(33, 33, 33);\n}\n\n.info{\n       height: 20px;\n       width: 575px;\n       padding: 10px;\n       line-height: 25px;\n      //  font-size: 20px;\n      //  border:#000000 solid 1px;\n       display: flex;\n       justify-content: space-between;\n      // background-color: chartreuse;\n     }\n     .item{\n       margin-bottom: 10px;\n     }\n    .el-scrollbar {\n    position: relative;\n    max-height: 620px;\n    width: 70px;\n    // overflow: auto;\n    // overflow-x: scroll;\n}\n</style>\n"],"sourceRoot":"src/views/Student/components"}]}